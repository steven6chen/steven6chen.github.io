var data={"title":"Calculator: Ideal body weight (method of Devine) and dosing weight for adults","body":"<div id=\"topicContentCalculator\" class=\"utdArticleSection\"><div id=\"topicText\">\n<div id=\"mc3k\">\n\n\n\n\n<form name=\"IBW_Devine_form\" id=\"IBW_Devine_form\" action=\"\" onsubmit=\"return false;\" onkeydown=\"formKeyDown(event);\" onkeypress=\"return validNumberField(event);\" onkeyup=\"IBW_Devine_fx();\">\n\n<table width=\"100%\" cellpadding=\"4\" cellspacing=\"0\" summary=\"MedCalc 3000 Table\">\n<tr><td bgcolor=\"#eeeeee\" width=\"1%\"><br /></td>\n<td bgcolor=\"#eeeeee\" align=\"left\">\n<span class=\"medCalcFontTitleBox\">\n\n \nCalculator: Ideal body weight (method of Devine) and dosing weight for adults\n</span></td></tr></table><br />&nbsp;<br />\n\n<div id=\"calc_main\">\n<center><table cellpadding=\"6\" cellspacing=\"0\" width=\"95%\" summary=\"MedCalc 3000 Table\"><tr><td align=\"right\" width=\"50%\">\n<center>\n<span class=\"medCalcFontIO\">\nInput:\n</span>\n<br />&nbsp;<br />\n<table cellpadding=\"3\" cellspacing=\"0\" summary=\"MedCalc 3000 Table\">\n<tr><td align=\"right\"><span class=\"medCalcFontOneBold\">Sex</span></td>\n<td colspan=\"2\" nowrap=\"nowrap\" align=\"left\">\n<span class=\"medCalcFontCCTab\">&nbsp;&nbsp;\nFemale <input type=\"radio\" name=\"Sex_radio\" value=\"Female\" onclick=\"IBW_Sex = 45.5; IBW_Devine_fx();\" />\n&nbsp;&nbsp;&nbsp;&nbsp;\nMale <input type=\"radio\" name=\"Sex_radio\" value=\"Male\" onclick=\"IBW_Sex = 50; IBW_Devine_fx();\" />\n&nbsp;&nbsp;&nbsp;\n\n<br />&nbsp;</span></td></tr>\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Height</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Height_param\" size=\"6\" value=\"\" onblur=\"IBW_Devine_fx(); minMaxCheck();\" onchange=\"IBW_Devine_fx();\" /></td>\n<td align=\"left\" width=\"90\" valign=\"top\"> <select name=\"Height_unit\" onchange=\"IBW_Devine_fx();\" style=\"width:80px;\" class=\"medCalcFontSelect\">\n<option value=\"0.393700787401575|0|cm\">cm</option>\n<option value=\"1|0|in\" selected=\"selected\">in</option>\n</select> </td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Actual weight</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Actual_weight_param\" size=\"6\" value=\"\" onblur=\"IBW_Devine_fx(); minMaxCheck();\" onchange=\"IBW_Devine_fx();\" /></td>\n<td align=\"left\" width=\"90\" valign=\"top\"> <select name=\"Actual_weight_unit\" onchange=\"IBW_Devine_fx();\" style=\"width:80px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|kg\" selected=\"selected\">kg</option>\n<option value=\"0.45359237|0|lb\">lb</option>\n</select> </td></tr>\n\n\n</table>\n</center>\n</td><td align=\"left\" bgcolor=\"#eeeeee\">\n<center><span class=\"medCalcFontIO\">Results:</span>\n\n<br />&nbsp;<br />\n<table bgcolor=\"#eeeeee\" summary=\"MedCalc 3000 Table\" cellspacing=\"4\">\n<tr>\n<td align=\"right\"><span class=\"medCalcFontOneBold\">Ideal body weight</span></td>\n<td valign=\"top\" nowrap=\"nowrap\">&nbsp; <input type=\"text\" name=\"Ideal_body_weight_param\" size=\"6\" onfocus=\"blur();\" /></td>\n<td valign=\"top\"><span class=\"medCalcFontOne\">\n<select name=\"Ideal_body_weight_unit\" onchange=\"IBW_Devine_fx();\" style=\"width:80px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|kg\" selected=\"selected\">kg</option>\n<option value=\"0.45359237|0|lb\">lb</option>\n</select>\n</span></td>\n</tr>\n\n<tr>\n<td align=\"right\"><span class=\"medCalcFontOneBold\">Dosing weight</span></td>\n<td valign=\"top\" nowrap=\"nowrap\">&nbsp; <input type=\"text\" name=\"Dosing_weight_param\" size=\"6\" onfocus=\"blur();\" /></td>\n<td valign=\"top\"><span class=\"medCalcFontOne\">\n<select name=\"Dosing_weight_unit\" onchange=\"IBW_Devine_fx();\" style=\"width:80px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|kg\" selected=\"selected\">kg</option>\n<option value=\"0.45359237|0|lb\">lb</option>\n</select>\n</span></td>\n</tr>\n\n\n<tr><td colspan=\"3\">&nbsp;<br /></td></tr>\n<tr><td colspan=\"3\" align=\"center\"><span class=\"medCalcFontOneBold\">Decimal precision:</span>\n<select name=\"decpts\" onchange=\"IBW_Devine_fx();\" class=\"medCalcFontSelect\">\n<option>0</option>\n<option selected=\"selected\">1</option>\n<option>2</option>\n<option>3</option>\n\n</select></td></tr>\n\n</table>\n</center><br />&nbsp;<br />\n<div id=\"calc_buttons\">\n<center>\n<span class=\"medCalcFontOne\">\n\n\n\n\n\n<input type=\"reset\" name=\"reset\" value=\"Reset form\" />\n\n</span>\n</center>\n</div>\n</td></tr></table>\n</center>\n\n\n\n</div>\n<div id=\"calc_notes\">\n<span class=\"medCalcFontOneBold\">Notes</span>\n<ul class=\"medCalcFontOne\">\n<li><b>Ideal body weight</b> (IBW) is estimated by the following equations [1]: Males: IBW (kg) = 50 kg + 2.3 kg for each inch over 5 feet. Females: IBW (kg) = 45.5 kg + 2.3 kg for each inch over 5 feet.</li>\n<li>IBW may be useful for calculating an initial dose of certain medications distributed primarily to nonadipose tissues, such as penicillins, cephalosporins, digoxin, rocuronium, vecuronium, and aminoglycosides (use IBW if overweight, but nonobese) [2,3].</li>\n<li><b>Dosing weight</b> (DW) is calculated using the formula [3]: Dosing weight = Ideal body weight + (0.4 * [Actual weight - Ideal body weight]).</li>\n<li>DW is a calculated weight that accounts for the increased distribution of certain drugs to nonlean body tissues in obesity. It is only applicable for patients whose Actual body weight is greater than or equal to 125 percent of Ideal body weight. This calculator reports N/A when Dosing weight is not applicable.</li>\n<li>Separate calculators are available for estimating lean (nonadipose) body weight in adult males and lean body weight in females.</li>\n\n</ul>\n</div>\n\n\n<div id=\"calc_tables\">\n\n</div>\n\n<br />&nbsp;<br />\n\n<div id=\"calc_refs\">\n<span class=\"medCalcFontRef\"><b>References</b></span>\n<ol>\n<li><span class=\"medCalcFontRef\">Devine BJ. Gentamicin therapy. <i>Drug Intell Clin Pharm</i>. 1974; 8:650-5.</span></li>\n<li><span class=\"medCalcFontRef\">Hanley MJ, Abernethy DR, Greenblatt DJ. Effects of obesity on the pharmacokinetics of drugs in humans. <i>Clin Pharmacokinet</i>. 2010; 49:71-87.</span></li>\n<li><span class=\"medCalcFontRef\">Erstad BL. Dosing of medications in morbidly obese patients in the intensive care unit setting. <i>Intensive Care Med</i>. 2004; 30:18-32.</span></li>\n\n</ol>\n</div>\n\n</form>\n\n</div>\n</div><div id=\"topicAgreement\">Use of UpToDate is subject to the <a href=\"https://www.uptodate.com/legal/license\" class=\"licenseLink\" id=\"sla_in_page\">Subscription and License Agreement</a>.</div><div id=\"printDisclaimer\">\r\n\t<b>Only digits 0 to 9 and a single decimal point (&quot;.&quot;) are acceptable as numeric inputs. Attempted input of other characters into a numeric field may lead to an incorrect result.</b>\r\n\t<p>\r\n\tInformation on this page may not appear correctly if printed. </p>\r\n</div>\r\n<div id=\"disclaimerCalculator\">\r\n\t<div class=\"medCalcFontTwo\">\r\n\t\t<p class=\"header\">Legal Notices and Disclaimer</p>\r\n\t\t<p>\r\n\t\t\tAll information contained in and produced by the EBMcalc system is provided\r\n\t\t\tfor educational purposes only. This information should not be used for the diagnosis or treatment\r\n\t\t\tof any health problem or disease. \r\n\t\t\t<b>THIS INFORMATION IS NOT INTENDED TO REPLACE CLINICAL JUDGMENT OR GUIDE INDIVIDUAL PATIENT CARE IN ANY MANNER.</b>\r\n\t\t\t<a href=\"https://www.uptodate.com/legal/ebmcalc-disclaimer\" class=\"medCalcDisclaimerLink\">Click here for full notice and disclaimer.</a>\r\n\t\t</p>\r\n\t\t<p class=\"copy\">EBMcalc is Copyright &copy; 1998-2018 Foundation Internet Services, LLC</p>\r\n\t</div>\r\n</div><div id=\"topicVersionRevision\">Topic 13489 Version 18.0</div></div>","outline":null,"javascript":"\n/* <![CDATA[ */\n\nvar lastChar = '';\n\nfunction log(i){\nreturn Math.log(i) * Math.LOG10E;   \n}\n\nfunction ln(i){\nreturn Math.log(i);\n}\n\nfunction sq(i){\nreturn i * i;\n}\n\nfunction sqr(i){\nreturn Math.sqrt(i);\n}\n\n\nfunction power(x,y){\nreturn Math.pow(x,y);\n}\n\nfunction eTo(x){\nreturn Math.exp(x);\n}\n\n\nfunction fixDP(r, dps) {\nif (isNaN(r)) return \"NaN\";\nvar msign = '';\nif (r < 0) msign = '-';\nx = Math.abs(r);\nif (x > Math.pow(10, 21)) return msign + x.toString();\nvar m = Math.round(x * Math.pow(10, dps)).toString();\nif (dps == 0) return msign + m;\nwhile (m.length <= dps) m = \"0\" + m;\nreturn msign + m.substring(0, m.length - dps) + \".\" + m.substring(m.length - dps);\n}\n\nfunction alertNaN(){\nalert('This field is improperly formatted. You may only input the digits 0-9 and a decimal point.');  \ndoCalc = false; \nclrResults();\n}\n\nfunction validNumberField(event) {\nvar field = event.target;\n\nif(field && field != 'undefined' && field.attributes.type.nodeValue && (field.attributes.type.nodeValue == 'number')) {\nvar val = field.value;\nvar charCode = event.charCode;\nvar key = String.fromCharCode(charCode);\n\nif(charCode == 0 || charCode == 13) {\n  return true;\n}\n\nif(key == ' ') {\nalert('Numeric field cannot contain spaces.');\n  return false;\n}\t\n\t\t\nif(key == '.') { return validDecimalPoint(val, key); }\nif(key == '-') { return validMinus(val, key); }\n\nif(isNaN(parseInt(key))) {\nalertNaN();\nreturn false;\n}\n\t\nreturn validFloat(val, key);\n}\nreturn true;\n}\n\nfunction validDecimalPoint(val, key) {\nif(val.length == 0 && lastChar != '.') {\n  lastChar = '.';\n  return true;\n}\nif(val.indexOf('.') >= 0 || lastChar == '.') {\n alertNaN();\n return false;\n}\nif(validFloat(val, key)) {\n lastChar = key;\n return true;\n}\nlastChar = '';\nreturn false;\n}\n\nfunction validMinus(val, key) {\nif(val.length == 0) {\n  return true;\n}\nif(val.length > 1) {\n alertNaN();\n return false;\n}\nreturn validFloat(val, key);\n}\n\n\nfunction validFloat(val, key) {\nvar currentVal = parseFloat(val + key);\nif(isNaN(val + key) || isNaN(currentVal)) {\nalertNaN();\nreturn false;\n}\nreturn true;\n}\n\nfunction formKeyDown(event) {\nvar field = event.target;\n\nif(field && field != 'undefined' && field.attributes.type.nodeValue && (field.attributes.type.nodeValue == 'number')) {\n  var val = field.value;\n  var keyCode = event.keyCode;\n  if(keyCode == 8 || keyCode == 127) {\n    // backspace or delete\n    if(lastChar == '.') {\n      lastChar = '';\n    }\n    if(field.value.length == 3 && field.value[0] == '0' && field.value[1] == '.') {\n      // this handles a backspace on an input like \".5\", which is saved internally as \"0.5\"\n      //   otherwise, if you leave the field after the backspace, it retains \"0.5\" as the value, most likely an iOS bug\n      field.value = ''; \n    }\n  }\n}\nclrResults();\n}\n\nfunction clrValue(field) {\n field.value = '';\n lastChar = '';\n}\n\nvar currenttimeout;\n\n\nvar calctxt = ''; \nvar xmltxt = ''; \nvar xmlresult = '';\nvar htmtxt = ''; \nvar postNow = false;\n\n\nfunction IBW_Devine_fx() {\ncurrenttimeout = self.setTimeout('minMaxCheck();', 4500);\n\nwith(document.IBW_Devine_form){\n\n\ndoCalc = true;\nrbchk = false;\nif (Sex_radio[0].checked){ rbchk = true;\nIBW_Sex = 45.5;\n}\nif (Sex_radio[1].checked){ rbchk = true;\nIBW_Sex = 50;\n}\nif (!rbchk) doCalc = false;\nparam_value = parseFloat(Height_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Height_unit.options[Height_unit.selectedIndex].value.split('|');\nHeight = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Actual_weight_param.value);\nunit_parts = Actual_weight_unit.options[Actual_weight_unit.selectedIndex].value.split('|');\nActual_weight = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\ndp = decpts.options[decpts.selectedIndex].text;\nIdeal_body_weight =  (2.3 * (Height - 60)) + IBW_Sex;\n\nunit_parts = Ideal_body_weight_unit.options[Ideal_body_weight_unit.selectedIndex].value.split('|');\nif (doCalc) Ideal_body_weight_param.value = fixDP((Ideal_body_weight - parseFloat(unit_parts[1])) / parseFloat(unit_parts[0]), dp);\n\n\n\nDosing_weight =  0.4 * (Actual_weight - Ideal_body_weight) + Ideal_body_weight;\n\nunit_parts = Dosing_weight_unit.options[Dosing_weight_unit.selectedIndex].value.split('|');\nif (doCalc) Dosing_weight_param.value = fixDP((Dosing_weight - parseFloat(unit_parts[1])) / parseFloat(unit_parts[0]), dp);\n\nif (isNaN(Dosing_weight_param.value)) Dosing_weight_param.value = '';\n\nif (Actual_weight < (1.25 * Ideal_body_weight)){ Dosing_weight_param.value = 'N/A';};\n\n\n}\n\n}\n\nfunction minMaxCheck(){\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.IBW_Devine_form){\n\nif (Height_param.value && isNaN(Height_param.value)){ clrValue(Height_param); alertNaN('Height'); }\nif (Height_param.value && Height < 60) {\nHeight = 0;\nclrValue(Height_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Height is 60 in.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Height_param.value && Height > 108) {\nclrValue(Height_param);\nclrResults();\nHeight = 0;\ndoCalc = false;\n alert(\"The maximum value for Height is 108 in.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Actual_weight_param.value && isNaN(Actual_weight_param.value)){ clrValue(Actual_weight_param); alertNaN('Actual weight'); }\nif (Actual_weight_param.value && Actual_weight < 30) {\nActual_weight = 0;\nclrValue(Actual_weight_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Actual weight is 30 kg.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Actual_weight_param.value && Actual_weight > 300) {\nclrValue(Actual_weight_param);\nclrResults();\nActual_weight = 0;\ndoCalc = false;\n alert(\"The maximum value for Actual weight is 300 kg.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\n\n\n}\n\n}\n\nfunction clrResults(){\n\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.IBW_Devine_form){\n\nIdeal_body_weight_param.value = '';\nDosing_weight_param.value = '';\n\n\n}\n\n}\n\n\n\n\n\nvar IBW_Sex;\n\n\n\n\n\n\n\n\n\n\n/* ]]> */\n"}
var data={"title":"Calculator: Lean body weight (adult male)","body":"<div id=\"topicContentCalculator\" class=\"utdArticleSection\"><div id=\"topicText\">\n<div id=\"mc3k\">\n\n\n\n\n\n<form name=\"LeanBodyWgtM_form\" id=\"LeanBodyWgtM_form\" action=\"\" onsubmit=\"return false;\" onkeydown=\"clrResults();\" onkeypress=\"return validNumberField(event);\" onkeyup=\"LeanBodyWgtM_fx();\">\n\n<table width=\"100%\" cellpadding=\"4\" cellspacing=\"0\" summary=\"MedCalc 3000 Table\">\n<tr><td bgcolor=\"#eeeeee\" width=\"1%\"><br /></td>\n<td bgcolor=\"#eeeeee\" align=\"left\">\n<span class=\"medCalcFontTitleBox\">\n\nCalculator: Lean body weight (adult male)\n</span></td></tr></table><br />&nbsp;<br />\n\n<center>\n<div id=\"calc_equation\">\n<table cellspacing=\"0\" cellpadding=\"10\" summary=\"MedCalc 3000 Table\"><tr><td align=\"left\" bgcolor=\"#6c9a9c\"><span class=\"medCalcFontFormuli\">LBW[kg] = (9270 * TotalBodyWeight[kg]) / (6680 + (216 * BMI[kg/m<sup>2</sup>]))</span></td></tr></table><br />&nbsp;<br />\n</div>\n</center>\n\n<div id=\"calc_main\">\n<center><table cellpadding=\"6\" cellspacing=\"0\" width=\"95%\" summary=\"MedCalc 3000 Table\"><tr><td align=\"right\" width=\"50%\">\n<center>\n<span class=\"medCalcFontIO\">\nInput:\n</span>\n<br />&nbsp;<br />\n<table cellpadding=\"3\" cellspacing=\"0\" summary=\"MedCalc 3000 Table\">\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Total Body Weight</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Total_Body_Weight_param\" size=\"6\" value=\"\" onblur=\"LeanBodyWgtM_fx(); minMaxCheck();\" onchange=\"LeanBodyWgtM_fx();\" /></td>\n<td align=\"left\" width=\"115\" valign=\"top\"> <select name=\"Total_Body_Weight_unit\" onchange=\"LeanBodyWgtM_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|kg\" selected=\"selected\">kg</option>\n<option value=\"0.45359237|0|lb\">lb</option>\n</select> </td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Height</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Height_param\" size=\"6\" value=\"\" onblur=\"LeanBodyWgtM_fx(); minMaxCheck();\" onchange=\"LeanBodyWgtM_fx();\" /></td>\n<td align=\"left\" width=\"115\" valign=\"top\"> <select name=\"Height_unit\" onchange=\"LeanBodyWgtM_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|cm\" selected=\"selected\">cm</option>\n<option value=\"2.54|0|in\">in</option>\n<option value=\"100|0|m\">m</option>\n</select> </td></tr>\n\n\n</table>\n</center>\n</td><td align=\"left\" bgcolor=\"#eeeeee\">\n<center><span class=\"medCalcFontIO\">Results:</span>\n\n<br />&nbsp;<br />\n<table bgcolor=\"#eeeeee\" summary=\"MedCalc 3000 Table\" cellspacing=\"4\">\n<tr>\n<td align=\"right\"><span class=\"medCalcFontOneBold\">LBW</span></td>\n<td valign=\"top\" nowrap=\"nowrap\">&nbsp; <input type=\"text\" name=\"LBW_param\" size=\"6\" onfocus=\"blur();\" /></td>\n<td valign=\"top\"><span class=\"medCalcFontOne\">\n<select name=\"LBW_unit\" onchange=\"LeanBodyWgtM_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|kg\" selected=\"selected\">kg</option>\n<option value=\"0.45359237|0|lb\">lb</option>\n</select>\n</span></td>\n</tr>\n\n\n<tr><td colspan=\"3\">&nbsp;<br /></td></tr>\n<tr><td colspan=\"3\" align=\"center\"><span class=\"medCalcFontOneBold\">Decimal Precision:</span>\n<select name=\"decpts\" onchange=\"LeanBodyWgtM_fx();\" class=\"medCalcFontSelect\">\n<option>0</option>\n<option>1</option>\n<option selected=\"selected\">2</option>\n<option>3</option>\n\n</select></td></tr>\n\n</table>\n</center><br />&nbsp;<br />\n<center>\n<span class=\"medCalcFontOne\">\n\n\n\n\n\n<input type=\"reset\" name=\"reset\" value=\"Reset form\" />\n</span>\n</center>\n</td></tr></table>\n</center>\n\n\n\n</div><br />&nbsp;<br />\n<div id=\"calc_hints\">  \n<span class=\"medCalcFontOne\">\n\n</span>\n\n</div>\n\n\n\n<div id=\"calc_notes\">\n<span class=\"medCalcFontOneBold\">Notes</span>\n<ul class=\"medCalcFontOne\">\n<li>The formula depicted, which is based on gender, total body weight, and height, can be used to estimate LBW for adult males who are of normal weight or obese.</li>\n<li>This calculation is not applicable to individuals with abnormal body water composition (eg, fluid overload).</li>\n<li>This calculator is not validated in individuals at extremes of height, those with highly muscular builds or in underweight individuals.</li>\n<li>The equation on which the calculator was based was derived from data on a population of individuals with bodyweights up to 216.5 kg  or body mass index (BMI) up to 69.9 kg/m<sup>2</sup>, but was not validated in individuals weighing greater than 131.7 kg or with BMI over 38.4 kg/m<sup>2</sup>.</li>\n<li>A separate calculator is available for estimating ideal body weight (method of Devine) and adjusted dosing weight.</li>\n\n</ul>\n</div>\n\n\n<br />&nbsp;<br />\n\n\n<div id=\"calc_refs\">\n<span class=\"medCalcFontRef\">\n<b>References</b></span>\n<ol>\n<li><span class=\"medCalcFontRef\">Janmahasatian S, Duffull SB, Ash S, et. al. Quantification of lean bodyweight. <i>Clin Pharmacokinet</i>. 2005;44(10):1051-65.</span></li>\n\n</ol>\n</div>\n\n\n</form>\n\n</div>\n</div><div id=\"topicAgreement\">Use of UpToDate is subject to the <a href=\"https://www.uptodate.com/legal/license\" class=\"licenseLink\" id=\"sla_in_page\">Subscription and License Agreement</a>.</div><div id=\"printDisclaimer\">\r\n\t<b>Only digits 0 to 9 and a single decimal point (&quot;.&quot;) are acceptable as numeric inputs. Attempted input of other characters into a numeric field may lead to an incorrect result.</b>\r\n\t<p>\r\n\tInformation on this page may not appear correctly if printed. </p>\r\n</div>\r\n<div id=\"disclaimerCalculator\">\r\n\t<div class=\"medCalcFontTwo\">\r\n\t\t<p class=\"header\">Legal Notices and Disclaimer</p>\r\n\t\t<p>\r\n\t\t\tAll information contained in and produced by the EBMcalc system is provided\r\n\t\t\tfor educational purposes only. This information should not be used for the diagnosis or treatment\r\n\t\t\tof any health problem or disease. \r\n\t\t\t<b>THIS INFORMATION IS NOT INTENDED TO REPLACE CLINICAL JUDGMENT OR GUIDE INDIVIDUAL PATIENT CARE IN ANY MANNER.</b>\r\n\t\t\t<a href=\"https://www.uptodate.com/legal/ebmcalc-disclaimer\" class=\"medCalcDisclaimerLink\">Click here for full notice and disclaimer.</a>\r\n\t\t</p>\r\n\t\t<p class=\"copy\">EBMcalc is Copyright &copy; 1998-2018 Foundation Internet Services, LLC</p>\r\n\t</div>\r\n</div><div id=\"topicVersionRevision\">Topic 13407 Version 6.0</div></div>","outline":null,"javascript":"\n<!--\n\n\nfunction log(i){\nreturn Math.log(i) * Math.LOG10E;   \n}\n\nfunction ln(i){\nreturn Math.log(i);\n}\n\nfunction sq(i){\nreturn i * i;\n}\n\nfunction sqr(i){\nreturn Math.sqrt(i);\n}\n\n\nfunction power(x,y){\nreturn Math.pow(x,y);\n}\n\nfunction eTo(x){\nreturn Math.exp(x);\n}\n\n\nfunction fixDP(r, dps) {\nif (isNaN(r)) return \"NaN\";\nvar msign = '';\nif (r < 0) msign = '-';\nx = Math.abs(r);\nif (x > Math.pow(10, 21)) return msign + x.toString();\nvar m = Math.round(x * Math.pow(10, dps)).toString();\nif (dps == 0) return msign + m;\nwhile (m.length <= dps) m = \"0\" + m;\nreturn msign + m.substring(0, m.length - dps) + \".\" + m.substring(m.length - dps);\n}\n\nfunction alertNaN(){\nalert('This field is improperly formatted. You may only input the digits 0-9 and a decimal point.');  \ndoCalc = false; \nclrResults();\n}\n\n\nfunction validNumberField(event) {\nvar field = event.target;\n\nif(field && field != 'undefined' && field.attributes.type.nodeValue && (field.attributes.type.nodeValue == 'number')) {\nvar val = field.value;\nvar charCode = event.charCode;\nvar key = String.fromCharCode(charCode);\n\nif(charCode == 0) {\nreturn true;\n}\n\nif(key == ' ') {\nalert('Numeric field cannot contain spaces.');\nreturn false;\n}\t\n\t\t\nif(val.length == 0) {\nif(key == '+') { return true; }\nif(key == '-') { return true; }\t\nif(key == '.') { return true; }\n}\n\t\t\nif(key == '.') { return validFloat(val, key); }\n\nif(isNaN(parseInt(key))) {\nalertNaN();\nreturn false;\n}\n\t\nreturn validFloat(val, key);\n}\nreturn true;\n}\n\n\nfunction validFloat(val, key) {\nvar currentVal = parseFloat(val + key);\nif(isNaN(val + key) || isNaN(currentVal)) {\nalertNaN();\n}\nreturn true;\n}\n\nvar currenttimeout;\n\n\nvar calctxt = ''; \nvar xmltxt = ''; \nvar htmtxt = ''; \n\n\n\nfunction LeanBodyWgtM_fx() {\n\ncurrenttimeout = self.setTimeout('minMaxCheck();', 2000);\n\nwith(document.LeanBodyWgtM_form){\n\n\ndoCalc = true;\nparam_value = parseFloat(Total_Body_Weight_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Total_Body_Weight_unit.options[Total_Body_Weight_unit.selectedIndex].value.split('|');\nTotal_Body_Weight = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Height_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Height_unit.options[Height_unit.selectedIndex].value.split('|');\nHeight = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\ndp = decpts.options[decpts.selectedIndex].text;\nBMI =  Total_Body_Weight / sq(Height / 100);\n\nLBW =  (9270 * Total_Body_Weight) / (6680 + (216 * BMI));\n\nunit_parts = LBW_unit.options[LBW_unit.selectedIndex].value.split('|');\nif (doCalc) LBW_param.value = fixDP((LBW - parseFloat(unit_parts[1])) / parseFloat(unit_parts[0]), dp);\n\n\n\n\n\n}\n\n}\n\nfunction minMaxCheck(){\n\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.LeanBodyWgtM_form){\n\nif (Total_Body_Weight_param.value && isNaN(Total_Body_Weight_param.value)){ Total_Body_Weight_param.value = ''; alertNaN(); }\nif (Total_Body_Weight_param.value && Total_Body_Weight < 47) {\nTotal_Body_Weight = 0;\nTotal_Body_Weight_param.value = \"\";\nclrResults();\ndoCalc = false;\nalert(\"The minimum value for Total Body Weight is 47 kg.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Height_param.value && isNaN(Height_param.value)){ Height_param.value = ''; alertNaN(); }\nif (Height_param.value && Height < 137) {\nHeight = 0;\nHeight_param.value = \"\";\nclrResults();\ndoCalc = false;\nalert(\"The minimum value for Height is 137 cm.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Height_param.value && Height > 244) {\nHeight_param.value = \"\";\nclrResults();\nHeight = 0;\ndoCalc = false;\nalert(\"The maximum value for Height is 244 cm.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\n\n\n}\n\n}\n\n\nfunction clrResults(){\n\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.LeanBodyWgtM_form){\n\nLBW_param.value = '';\n\n\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n//-->\n"}
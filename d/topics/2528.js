var data={"title":"Calculator: Blood pressure percentiles for boys 0 to 17 years old (revised 2017)","body":"<div id=\"topicContentCalculator\" class=\"utdArticleSection\"><div id=\"topicText\">\n<div id=\"mc3k\">\n\n\n\n\n\n<form name=\"BloodPressurePercentBoysRevised_form\" id=\"BloodPressurePercentBoysRevised_form\" action=\"\" onsubmit=\"return false;\" onkeydown=\"formKeyDown(event);\" onkeypress=\"return validNumberField(event);\" onkeyup=\"BloodPressurePercentBoysRevised_fx();\">\n\n<table width=\"100%\" cellpadding=\"4\" cellspacing=\"0\" summary=\"EBMcalc Table\">\n<tr><td bgcolor=\"#eeeeee\" width=\"1%\"><br /></td>\n<td bgcolor=\"#eeeeee\" align=\"left\">\n<span class=\"medCalcFontTitleBox\">\n\n \nCalculator: Blood pressure percentiles for boys 0 to 17 years old (revised 2017)\n</span></td></tr></table><br />&nbsp;<br />\n\n<div id=\"calc_main\">\n<center>\n<span class=\"medCalcFontIO\">\nInput:\n</span>\n<br />&nbsp;<br />\n<table cellpadding=\"3\" cellspacing=\"0\" summary=\"EBMcalc Table\">\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Age</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Age_param\" size=\"6\" value=\"\" onblur=\"BloodPressurePercentBoysRevised_fx(); minMaxCheck();\" onchange=\"BloodPressurePercentBoysRevised_fx();\" onfocus=\"clrValue(this); clrResults();\" /></td>\n<td align=\"left\" valign=\"top\"> <select name=\"Age_unit\" onchange=\"clrResults();\" style=\"width:115px;\" class=\"medCalcFontSelect\">\n<option value=\"0.0833333333333333|0|mo\">mo</option>\n<option value=\"1|0|yr\" selected=\"selected\">yr</option>\n</select></td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Height</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Height_param\" size=\"6\" value=\"\" onblur=\"BloodPressurePercentBoysRevised_fx(); minMaxCheck();\" onchange=\"BloodPressurePercentBoysRevised_fx();\" onfocus=\"clrValue(this); clrResults();\" /></td>\n<td align=\"left\" valign=\"top\"> <select name=\"Height_unit\" onchange=\"clrResults();\" style=\"width:115px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|cm\" selected=\"selected\">cm</option>\n<option value=\"2.54|0|in\">in</option>\n<option value=\"100|0|m\">m</option>\n</select></td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Systolic BP</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Systolic_BP_param\" size=\"6\" value=\"\" onblur=\"BloodPressurePercentBoysRevised_fx(); minMaxCheck();\" onchange=\"BloodPressurePercentBoysRevised_fx();\" onfocus=\"clrValue(this); clrResults();\" /></td>\n<td align=\"left\" valign=\"top\"> <select name=\"Systolic_BP_unit\" onchange=\"clrResults();\" style=\"width:115px;\" class=\"medCalcFontSelect\">\n<option value=\"10|0|cmHg\">cmHg</option>\n<option value=\"1|0|mmHg\" selected=\"selected\">mmHg</option>\n</select></td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Diastolic BP</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Diastolic_BP_param\" size=\"6\" value=\"\" onblur=\"BloodPressurePercentBoysRevised_fx(); minMaxCheck();\" onchange=\"BloodPressurePercentBoysRevised_fx();\" onfocus=\"clrValue(this); clrResults();\" /></td>\n<td align=\"left\" valign=\"top\"> <select name=\"Diastolic_BP_unit\" onchange=\"clrResults();\" style=\"width:115px;\" class=\"medCalcFontSelect\">\n<option value=\"10|0|cmHg\">cmHg</option>\n<option value=\"1|0|mmHg\" selected=\"selected\">mmHg</option>\n</select></td></tr>\n\n\n</table>\n</center>\n<br />&nbsp;<br />    \n<div id=\"middle_calc_buttons\">\n<center>\n<span class=\"medCalcFontOne\">\n<input type=\"button\" value=\"Calculate BP percentiles\" onclick=\"BloodPressurePercentBoysRevised_fx(); calcBPP(); BloodPressurePercentBoysRevised_fx();\" />&nbsp;&nbsp;\n<input type=\"button\" value=\"Reset\" onclick=\"clrResults(); reset();\" />&nbsp;&nbsp;\n\n</span>\n</center>\n</div>\n<br />&nbsp;<br /><center><span class=\"medCalcFontIO\">Results:</span>\n\n<br />&nbsp;<br />\n<table bgcolor=\"#eeeeee\" summary=\"EBMcalc Table\" cellspacing=\"4\">\n<tr><td colspan=\"2\">&nbsp;</td></tr>\n<tr><td colspan=\"2\">\n&nbsp;<br />\n<table border=\"1\" cellpadding=\"4\" summary=\"tt\" width=\"500\"><tr>\n<td bgcolor=\"#ffffff\" valign=\"top\" align=\"left\" height=\"500\"><div id=\"ttxt\" class=\"medCalcFontOneBold\"></div></td>\n</tr></table>\n</td></tr>\n\n<tr><td colspan=\"3\">&nbsp;<br /></td></tr>\n\n</table>\n</center>\n\n\n</div><div id=\"pretextrefs\">\n&nbsp;\n</div>\n\n<div id=\"calc_notes\">\n<span class=\"medCalcFontOneBold\">Notes</span>\n<ul class=\"medCalcFontOne\">\n<li>The subject's calculated blood pressure (BP) percentiles are based on sex, age, and height.</li>\n<li class=\"parentNote\">For subjects under the age of 13, the following BP definitions are based on the 2017 American Academy of Pediatrics guidelines:\n<ul class=\"childNoteList\">\n<li class=\"childNote\"> Normal BP: Systolic and diastolic BP &lt;90<sup>th</sup> percentile based on sex, age, and height</li>\n<li class=\"childNote\"> Elevated BP: Systolic and diastolic BP &ge;90<sup>th</sup> percentile to &lt;95<sup>th</sup> percentile, or 120/80 mmHg to &lt;95<sup>th</sup> percentile (whichever is lower)</li>\n<li class=\"childNote\"> Stage 1 Hypertension (HTN): Systolic and diastolic BP &ge;95<sup>th</sup> percentile to &lt;95<sup>th</sup> percentile + 12 mmHg, or 130/80 to 139/89 mmHg (whichever is lower)</li>\n<li class=\"childNote\"> Stage 2 HTN: Systolic and diastolic BP &ge;95<sup>th</sup> percentile + 12 mmHg, or &ge;140/90 mmHg (whichever is lower)</li>\n</ul></li>\n<li class=\"parentNote\">For subjects 13 to &lt;18 years, BP definitions are based on adult standards as follows:\n<ul class=\"childNoteList\">\n<li class=\"childNote\"> Normal BP: Systolic BP &lt;120 and diastolic BP &lt;80 mmHg</li>\n<li class=\"childNote\"> Elevated BP: Systolic BP 120 to 129 and diastolic BP &lt;80 mmHg</li>\n<li class=\"childNote\"> Stage 1 HTN: 130/80 to 139/89 mmHg</li>\n<li class=\"childNote\">Stage 2 HTN: &ge;140/90 mmHg</li>\n</ul></li>\n<li>If a subject's height z-score is outside of the range -3.09 to 3.09 (0.01 to 99.9 percentiles), BP percentiles cannot be calculated.</li>\n<li>Calculated threshold BP values are rounded down to the nearest integer mmHg. Comparison of the calculated threshold  BP values to those presented in the AAP tables was notable for rare small, 1 mmHg, differences between the calculated  diastolic BP measurements. These occur only for girls and only when age is entered as an integer value. Entry of age  as a decimal (eg, 8.5 years) is encouraged to both improve the accuracy of BP percentile calculation, and to reduce the  chance of a discrepancy.</li>\n\n</ul>\n</div>\n\n\n<div id=\"calc_tables\">\n\n</div>\n\n<br />&nbsp;<br />\n\n<div id=\"calc_refs\">\n<span class=\"medCalcFontRef\"><b>References</b></span>\n<ol>\n<li><span class=\"medCalcFontRef\">Flynn JT, Kaelber DC, Baker-Smith CM, SUBCOMMITTEE ON SCREENING AND MANAGEMENT OF HIGH BLOOD PRESSURE IN CHILDREN, et. al. Clinical Practice  Guideline for Screening and Management of High Blood Pressure in Children and Adolescents. <i>Pediatrics</i>. 2017 Sep;140(3).</span></li>\n<li><span class=\"medCalcFontRef\">Rosner B, Cook N, Portman R, et. al. Determination of blood pressure percentiles in normal-weight children:  some methodological issues. <i>Am J Epidemiol</i>. 2008 Mar 15;167(6):653-66.</span></li>\n<li><span class=\"medCalcFontRef\">Whelton PK, Carey RM, Aronow WS, et. al. 2017 ACC/AHA/AAPA/ABC/ACPM/AGS/APhA/ASH/ASPC/NMA/PCNA Guideline for the Prevention,  Detection, Evaluation, and Management of High Blood Pressure in Adults: A Report of the American College of Cardiology/American Heart Association  Task Force on Clinical Practice Guidelines. <i>J Am Coll Cardiol</i>. 2017 Nov 7. pii:S0735-1097(17)41519-1.</span></li>\n<li><span class=\"medCalcFontRef\">National High Blood Pressure Education Program Working Group on High Blood Pressure in Children and Adolescents.  The fourth report on the diagnosis, evaluation, and treatment of high blood pressure in children and adolescents. <i> Pediatrics</i>. 2004 Aug;114(2 Suppl 4th Report):555-76.</span></li>\n<li><span class=\"medCalcFontRef\">LMS Parameters for Boys (including infants): Height for Age. National health and nutrition survey (NHANES), CDC/National Center for Health Statistics.</span></li>\n\n</ol>\n</div>\n\n</form>\n\n</div>\n</div><div id=\"topicAgreement\">Use of UpToDate is subject to the <a href=\"https://www.uptodate.com/legal/license\" class=\"licenseLink\" id=\"sla_in_page\">Subscription and License Agreement</a>.</div><div id=\"printDisclaimer\">\r\n\t<b>Only digits 0 to 9 and a single decimal point (&quot;.&quot;) are acceptable as numeric inputs. Attempted input of other characters into a numeric field may lead to an incorrect result.</b>\r\n\t<p>\r\n\tInformation on this page may not appear correctly if printed. </p>\r\n</div>\r\n<div id=\"disclaimerCalculator\">\r\n\t<div class=\"medCalcFontTwo\">\r\n\t\t<p class=\"header\">Legal Notices and Disclaimer</p>\r\n\t\t<p>\r\n\t\t\tAll information contained in and produced by the EBMcalc system is provided\r\n\t\t\tfor educational purposes only. This information should not be used for the diagnosis or treatment\r\n\t\t\tof any health problem or disease. \r\n\t\t\t<b>THIS INFORMATION IS NOT INTENDED TO REPLACE CLINICAL JUDGMENT OR GUIDE INDIVIDUAL PATIENT CARE IN ANY MANNER.</b>\r\n\t\t\t<a href=\"https://www.uptodate.com/legal/ebmcalc-disclaimer\" class=\"medCalcDisclaimerLink\">Click here for full notice and disclaimer.</a>\r\n\t\t</p>\r\n\t\t<p class=\"copy\">EBMcalc is Copyright &copy; 1998-2018 Foundation Internet Services, LLC</p>\r\n\t</div>\r\n</div><div id=\"topicVersionRevision\">Topic 13411 Version 6.0</div></div>","outline":null,"javascript":"\n\n/* <![CDATA[ */\n\n//Blood Pressure Percentiles Common JS\n\nb0sys = new Array;\nba1sys = new Array;\nba2sys = new Array;\nba3sys = new Array;\nba4sys = new Array;\nb1sys = new Array;\nb2sys = new Array;\nb3sys = new Array;\nb4sys = new Array;\nbb1sys = new Array;\nbb2sys = new Array;\nbb3sys = new Array;\nbb4sys = new Array;\n\nsyspercentiles = new Array; \ndiapercentiles = new Array; \n\nvar syspercentile, diapercentile;\n\nvar x, x2, x2a, x2b, x2c, x2s, x3, x3a, x3s, x4, x4a, x4s;\nvar y, y2, y2a, y2b, y2c, y2s, y3, y3a, y3s, y4, y4a, y4s;\nvar w, w2, w2a, w2b, w2c, w2s, w3, w3a, w3s, w4, w4a, w4s;\n\nvar Age, Age_Months, Height;\n\nfunction calcVars(){\n\nloadW();\n\nx = Height;\ny = Age;\n\nif ((x - t1m) < 0){ x2a = 0; } else { x2a = x - t1m; };\nif ((x - t4m) < 0){ x2b = 0; } else { x2b = x - t4m; };\nif ((x - t5m) < 0){ x2c = 0; } else { x2c = x - t5m; };\n\nx2 = power(x2a,3) - (power(x2b,3) * (t5m - t1m) / (t5m - t4m)) + (power(x2c,3) * (t4m - t1m) / (t5m - t4m));\n\nif ((x - t2m) < 0){ x3a = 0; } else { x3a = x - t2m; };\n\nx3 = power(x3a,3) - (power(x2b,3) * (t5m - t2m) / (t5m - t4m)) + (power(x2c,3) * (t4m - t2m) / (t5m - t4m));\n\nif ((x -t3m) < 0){ x4a = 0; } else { x4a = x - t3m; };\n\nx4 = power(x4a,3) - (power(x2b,3) * (t5m - t3m) / (t5m - t4m)) + (power(x2c,3) * (t4m - t3m) / (t5m - t4m));\n\nx2s = x2 / 100;\nx3s = x3 / 100;\nx4s = x4 / 100;\n\nif ((y - ta1m) < 0){ y2a = 0; } else { y2a = y - ta1m; };\nif ((y - ta4m) < 0){ y2b = 0; } else { y2b = y - ta4m; };\nif ((y - ta5m) < 0){ y2c = 0; } else { y2c = y - ta5m; };\n    \n\ny2 = power(y2a,3) - (power(y2b,3) * (ta5m - ta1m) / (ta5m - ta4m)) + (power(y2c,3) * (ta4m - ta1m) / (ta5m - ta4m));\n\nif ((y - ta2m) < 0){ y3a = 0; } else { y3a = y - ta2m; };\n\ny3 = power(y3a,3) - (power(y2b,3) * (ta5m - ta2m) / (ta5m - ta4m)) + (power(y2c,3) * (ta4m - ta2m) / (ta5m - ta4m));\n\nif ((y - ta3m) < 0){ y4a = 0; } else { y4a = y - ta3m; };\n\ny4 = power(y4a,3) - (power(y2b,3) * (ta5m - ta3m) / (ta5m - ta4m)) + (power(y2c,3) * (ta4m - ta3m) / (ta5m - ta4m));\n\ny2s = y2 / 100;\ny3s = y3 / 100;\ny4s = y4 / 100;\n\nif ((w - tb1m) < 0){ w2a = 0; } else { w2a = w - tb1m; };\nif ((w - tb4m) < 0){ w2b = 0; } else { w2b = w - tb4m; };\nif ((w - tb5m) < 0){ w2c = 0; } else { w2c = w - tb5m; };\n\nw2 = power(w2a,3) - (power(w2b,3) * (tb5m - tb1m) / (tb5m - tb4m)) + (power(w2c,3) * (tb4m - tb1m) / (tb5m - tb4m));\n\nif ((w - tb2m) < 0){ w3a = 0; } else { w3a = w - tb2m; };\n\nw3 = power(w3a,3) - (power(w2b,3) * (tb5m - tb2m) / (tb5m - tb4m)) + (power(w2c,3) * (tb4m - tb2m) / (tb5m - tb4m));\n\nif ((w - tb3m) < 0){ w4a = 0; } else { w4a = w - tb3m; };\n\nw4 = power(w4a,3) - (power(w2b,3) * (tb5m - tb3m) / (tb5m - tb4m)) + (power(w2c,3) * (tb4m - tb3m) / (tb5m - tb4m));\n\nw2s = w2 / 10000;\nw3s = w3 / 10000;\nw4s = w4 / 10000;\n\n}\n\nfunction calcPercentile(i){\n\nreturn  b0sys[i] + (b1sys[i] * x) + (b2sys[i] * x2s) + (b3sys[i] * x3s) + (b4sys[i] * x4s) + (ba1sys[i] * y) + (ba2sys[i] * y2s) + (ba3sys[i] * y3s) + (ba4sys[i] * y4s) + (bb1sys[i] * w) + (bb2sys[i] * w2s) + (bb3sys[i] * w3s) + (bb4sys[i] * w4s);\n\n}\n\nfunction calcBPP(){\nif (doCalc){\n\ninterptxt = '';\ninterphtm = '';\ninterpxml = '';\n\nif (Math.abs(Height_Z) > 3.09){\ndocument.getElementById('ttxt').innerHTML = 'Height percentile is out of range for this calculation.';\nreturn;\n}\n\n\ncalcVars();\nloadSystolicVars()\nvar mindiff = 10000;\nfor (p = 1; p < 100; p = p + 1){\nsyspercentiles[p] =  calcPercentile(p - 1);\nif (Math.abs((Systolic_BP - syspercentiles[p])) < mindiff){ syspercentile = p; mindiff = Math.abs(Systolic_BP - syspercentiles[p]); };\n}\n\nloadDiastolicVars()\nmindiff = 10000;\nfor (p = 1; p < 100; p = p + 1){\ndiapercentiles[p] =  calcPercentile(p - 1);\nif (Math.abs((Diastolic_BP - diapercentiles[p])) < mindiff){ diapercentile = p; mindiff = Math.abs(Diastolic_BP - diapercentiles[p]); };\n}\n\ninterphtm += '<b>Patient values based on age, sex, and height are:<\\/b><br><br><center><table border=\"1\" cellpadding=\"4\" cellspacing=\"0\" width=\"90%\" class=\"medCalcFontOneBold\">';\n\n\n\nif (Age >= 13){\n\ninterphtm += '<tr><td align=\"right\">Systolic BP:<\\/td><td align=\"left\" nowrap=\"nowrap\">' + Systolic_BP + ' mmHg<\\/td><td align=\"left\">';\nif (Systolic_BP >= 140) interphtm += 'stage II HTN';\nelse if (Systolic_BP >= 130) interphtm += 'stage 1 HTN';\nelse if (Systolic_BP >= 120) interphtm += 'elevated BP';\nelse interphtm +=  'not elevated';\n\ninterphtm += '<\\/td></\\tr>';\n\ninterphtm += '<tr><td align=\"right\">Diastolic BP:<\\/td><td align=\"left\" nowrap=\"nowrap\">' + Diastolic_BP + ' mmHg<\\/td><td align=\"left\">';\nif (Diastolic_BP >= 90) interphtm += 'stage 2 HTN';\nelse if (Diastolic_BP >= 80) interphtm += 'stage 1 HTN';\nelse interphtm += 'not elevated';\n\ninterphtm += '<\\/td></\\tr>';\n}\n\n\nelse{\n\ninterphtm += '<tr><td align=\"right\">Systolic BP:<\\/td><td align=\"left\" nowrap=\"nowrap\">' + Systolic_BP + ' mmHg<\\/td><td align=\"left\">';\nif ((Systolic_BP >= 140) || (Systolic_BP >= (Math.floor(syspercentiles[95] + 12)))) interphtm += 'stage 2 HTN';\nelse if ((Systolic_BP >= 130) || (Systolic_BP >= Math.floor(syspercentiles[95]))) interphtm += 'stage 1 HTN';\nelse if ((Systolic_BP >= 120) || (Systolic_BP >= Math.floor(syspercentiles[90]))) interphtm += 'elevated BP';\nelse interphtm += 'not elevated';\n\ninterphtm += '<\\/td></\\tr>';\ninterphtm += '<tr><td align=\"right\">Diastolic BP:<\\/td><td align=\"left\" nowrap=\"nowrap\">' + Diastolic_BP + ' mmHg<\\/td><td align=\"left\">';\nif ((Diastolic_BP >= 90) || (Diastolic_BP >= (Math.floor(diapercentiles[95] + 12)))) interphtm += 'stage 2 HTN';\nelse if ((Diastolic_BP >= 80) || (Diastolic_BP >= Math.floor(diapercentiles[95]))) interphtm += 'stage 1 HTN';\nelse if (Diastolic_BP >= Math.floor(diapercentiles[90])) interphtm += 'elevated BP';\nelse interphtm += 'not elevated';\n\ninterphtm += '<\\/td></\\tr>';\n\ninterphtm += '<br>';            \n\n}\n\ninterphtm += '<tr><td align=\"right\">Calculated systolic BP percentile:<\\/td><td align=\"left\" colspan=\"2\">' + syspercentile + '%<\\/td><\\/tr>';\ninterptxt += 'Calculated systolic BP percentile: ' + syspercentile + '%\\n';\ninterpxml += '<Calculated_systolic_BP_percentile>' + syspercentile + '%<\\/Calculated_systolic_BP_percentile>\\n';\n\ninterphtm += '<tr><td align=\"right\">Calculated diastolic BP percentile:<\\/td><td align=\"left\" colspan=\"2\">' + diapercentile + '%<\\/td><\\/tr><\\/table><\\/center>';\ninterptxt += 'Calculated diastolic BP percentile: ' + diapercentile + '%\\n\\n';\ninterpxml += '<Calculated_diastolic_BP_percentile>' + diapercentile + '%<\\/Calculated_diastolic_BP_percentile>\\n';\n\ninterphtm += '<br><br>Population values for BP thresholds based on age, sex, and height of the patient:';\ninterphtm += '<br><br><center><table border=\"1\" cellpadding=\"4\" cellspacing=\"0\" width=\"90%\" class=\"medCalcFontOne\"><tr><td align=\"left\" bgcolor=\"#cccccc\" colspan=\"2\"><b>Systolic BP<\\/b><\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">50th percentile:<\\/td><td align=\"left\">' + Math.floor(syspercentiles[50]) + ' mmHg<\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">90th percentile:<\\/td><td align=\"left\">' + Math.floor(syspercentiles[90]) + ' mmHg<\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">Stage 1 hypertension threshold:<\\/td><td align=\"left\">' + Math.floor(syspercentiles[95]) + ' mmHg<\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">Stage 2 hypertension threshold:<\\/td><td align=\"left\">' + Math.floor(syspercentiles[95] + 12) + ' mmHg<\\/td><\\/tr>';\n\ninterphtm += '<tr><td align=\"left\" bgcolor=\"#cccccc\" colspan=\"2\"><b>Diastolic BP<\\/b><\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">50th  percentile:<\\/td><td align=\"left\">' + Math.floor(diapercentiles[50]) + ' mmHg<\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">90th percentile:<\\/td><td align=\"left\">' + Math.floor(diapercentiles[90]) + ' mmHg<\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">Stage 1 hypertension threshold:<\\/td><td align=\"left\">' + Math.floor(diapercentiles[95]) + ' mmHg<\\/td><\\/tr>';\ninterphtm += '<tr><td align=\"right\">Stage 2 hypertension threshold:<\\/td><td align=\"left\">' + Math.floor(diapercentiles[95] + 12) + ' mmHg<\\/td><\\/tr><\\/table><\\/center>';\n\ndocument.getElementById('ttxt').innerHTML = interphtm;\n\n}}\n// Blood Pressure Percentiles Boys JS\n\n\nvar t1m = 107.8;\nvar t2m = 140.0;\nvar t3m = 154.5;\nvar t4m = 166.4;\nvar t5m = 179.1;\nvar ta1m = 5.06;\nvar ta2m = 10.79;\nvar ta3m = 13.22;\nvar ta4m = 14.51;\nvar ta5m = 17.30;\nvar tb1m = -15;\nvar tb2m = 8.9;\nvar tb3m = 50.375;\nvar tb4m = 112.684;\nvar tb5m = 250.04;\n\n\nfunction loadW(){\nw = (Age - 10) * (Height - 150); \n}\n\nfunction loadSystolicVars(){\n\nb0sys = [-15.1614, 7.1181, 16.6833, 4.2312, 7.5365, 9.1488, 8.9420, 7.6195, 4.7191, -3.7807, -4.3588, 0.9793, 4.1744, 6.8468, 11.1461, 12.4221, 10.6386, 11.8950, 15.6199, 19.1961, 24.9014, 27.7411, 26.5408, 24.9608, 30.7628, 32.9166, 35.8384, 35.8936, 35.6599, 34.2326, 38.4360, 37.4759, 38.2626, 40.1654, 42.9794, 45.6449, 46.6551, 47.5003, 45.4030, 44.8971, 47.5247, 46.4630, 43.9842, 43.2939, 44.9267, 45.3659, 45.5821, 47.1433, 51.4950, 49.2507, 48.7230, 46.2919, 47.5969, 48.5103, 47.0617, 47.9002, 49.1150, 49.9451, 50.1287, 49.5100, 47.0301, 46.9571, 45.7187, 46.6338, 46.7960, 45.6059, 46.2843, 42.7066, 42.8015, 44.6588, 45.4978, 44.3791, 44.5213, 43.3339, 45.7745, 46.2858, 47.1461, 49.8411, 54.4100, 59.0571, 61.5501, 62.0991, 63.7402, 63.1912, 65.2900, 69.7586, 68.7204, 70.0709, 71.2247, 71.0728, 70.0217, 70.5203, 76.3547, 90.6025, 102.6662, 102.9154, 125.2207, 125.8697, 99.6314];\n\nba1sys = [0.1585, 0.1808, -0.0164, 0.3344, -0.0042, -0.3319, -0.0756, 0.0671, 0.0248, 0.2569, 0.5128, 0.2770, 0.2919, 0.1938, 0.2378, 0.2760, 0.5028, 0.4259, 0.2947, 0.2043, 0.1164, -0.0002, -0.0132, 0.0679, -0.0404, -0.0712, -0.1540, -0.2601, -0.2948, -0.3816, -0.5180, -0.3108, -0.2565, -0.3730, -0.5548, -0.6118, -0.5689, -0.5697, -0.5065, -0.3950, -0.4291, -0.3679, -0.1919, -0.2722, -0.3058, -0.1577, -0.0245, -0.0461, -0.1432, -0.0452, -0.0088, 0.1370, 0.1489, 0.1248, 0.2003, 0.1572, 0.0782, 0.1037, 0.2012, 0.1993, 0.2961, 0.2268, 0.3190, 0.3294, 0.2184, 0.2609, 0.1969, 0.3391, 0.3061, 0.3589, 0.2369, 0.2470, 0.3308, 0.3496, 0.2806, 0.2501, 0.0565, -0.0213, -0.2754, -0.3916, -0.4923, -0.5602, -0.7486, -0.7684, -0.9003, -0.9059, -0.7413, -0.7105, -0.6095, -0.5897, -0.3531, -0.3866, -0.7212, -1.3557, -1.2263, -1.5899, -3.3398, -3.2997, -2.8535];\n\nba2sys = [0.7927, 0.1658, 0.2766, 0.0389, 0.4065, 0.8441, 0.7374, 0.6085, 0.8039, 0.5926, 0.4441, 0.5168, 0.5211, 0.5369, 0.3678, 0.2488, 0.0451, 0.0403, 0.1255, 0.1214, 0.1324, 0.2510, 0.3133, 0.2933, 0.3473, 0.3957, 0.4647, 0.5885, 0.6396, 0.7322, 0.8471, 0.6669, 0.5950, 0.7286, 0.8878, 0.8823, 0.8660, 0.8793, 0.8608, 0.8017, 0.8436, 0.8717, 0.7920, 0.8627, 0.9029, 0.7596, 0.5923, 0.5910, 0.6440, 0.5634, 0.5464, 0.4328, 0.3829, 0.3886, 0.3427, 0.3732, 0.4887, 0.4323, 0.3324, 0.3903, 0.3665, 0.4324, 0.3143, 0.3122, 0.4173, 0.3536, 0.3840, 0.2772, 0.3293, 0.2756, 0.3198, 0.2747, 0.2335, 0.2289, 0.3230, 0.3239, 0.3804, 0.4353, 0.6713, 0.7140, 0.8257, 0.8523, 1.0333, 1.0572, 1.2109, 1.1421, 1.1610, 1.1845, 1.0475, 0.9540, 0.6571, 0.7711, 0.9341, 1.1746, 0.8589, 1.4523, 2.9466, 3.1051, 3.0650];\n\nba3sys = [-16.2445, -8.1838, -6.0204, -4.8857, -5.8405, -9.4288, -10.0163, -8.8982, -10.5118, -10.5763, -11.0057, -10.2491, -10.2719, -9.8873, -8.1510, -6.8316, -6.0581, -5.1913, -4.8706, -4.0580, -3.0351, -3.2510, -3.6487, -3.7963, -3.5140, -3.9000, -4.0996, -4.4079, -4.5403, -4.7950, -5.2375, -4.4870, -3.8813, -4.6690, -5.2907, -5.0487, -5.0611, -5.2030, -5.5153, -5.6222, -5.8317, -6.4206, -6.7209, -7.0319, -7.1291, -6.3854, -5.4731, -5.2852, -5.3385, -5.0092, -5.0086, -4.7097, -4.2807, -4.0219, -3.9935, -3.8154, -4.5668, -3.9989, -3.2058, -3.8043, -3.9702, -4.3249, -3.5355, -3.6994, -4.2913, -3.7119, -3.6001, -3.5789, -3.7417, -3.1211, -2.8753, -2.2776, -2.5761, -2.6952, -3.0124, -2.6897, -1.9028, -2.2574, -3.3139, -3.2563, -3.7049, -3.3702, -4.0639, -4.1343, -4.7056, -3.8514, -4.8929, -4.9763, -4.2244, -3.2255, -1.1748, -1.2734, -1.3303, 0.1551, 3.2534, -0.5061, -5.4863, -7.3155, -6.4997];\n\nba4sys = [64.9588, 41.4072, 29.5897, 26.2991, 25.1459, 35.3411, 38.7888, 34.0775, 37.6146, 40.4022, 43.9366, 40.6962, 41.0334, 39.8590, 35.8557, 31.9031, 30.8189, 27.4155, 25.2474, 22.8341, 18.7307, 17.9354, 17.7499, 17.8167, 16.9902, 17.9467, 18.2022, 17.6393, 17.3049, 17.0262, 18.6249, 17.3228, 15.7330, 17.4341, 18.8227, 18.8985, 19.3856, 19.8144, 21.0092, 21.9379, 22.6883, 23.9766, 25.4109, 25.6372, 25.4723, 23.8924, 22.2940, 21.7529, 21.7750, 21.3118, 21.4246, 21.0581, 20.0760, 19.1219, 19.2648, 17.8605, 19.8764, 18.2108, 15.6080, 17.1157, 17.4284, 18.4933, 16.3535, 16.9404, 18.3125, 16.4744, 15.9912, 16.5957, 16.4765, 14.5181, 12.9699, 10.7861, 12.6357, 12.6151, 12.5836, 11.1237, 7.5777, 9.0572, 10.8614, 11.6335, 12.2735, 9.8550, 10.5288, 10.1666, 10.0344, 8.3464, 11.4709, 11.0263, 9.2028, 5.8280, 0.8060, -1.0004, -1.6526, -7.7290, -15.7885, -7.5933, -1.9080, 3.4281, -4.9829];\n\nb1sys = [0.7016, 0.5512, 0.5000, 0.5830, 0.5865, 0.6019, 0.5921, 0.5961, 0.6241, 0.6754, 0.6643, 0.6426, 0.6197, 0.6088, 0.5761, 0.5662, 0.5675, 0.5654, 0.5485, 0.5297, 0.4951, 0.4835, 0.4961, 0.5066, 0.4711, 0.4584, 0.4447, 0.4551, 0.4616, 0.4801, 0.4592, 0.4543, 0.4471, 0.4421, 0.4348, 0.4196, 0.4100, 0.4057, 0.4195, 0.4168, 0.3999, 0.4049, 0.4126, 0.4253, 0.4173, 0.4047, 0.3963, 0.3877, 0.3619, 0.3735, 0.3773, 0.3870, 0.3772, 0.3741, 0.3815, 0.3802, 0.3783, 0.3716, 0.3664, 0.3729, 0.3864, 0.3932, 0.3986, 0.3928, 0.4005, 0.4090, 0.4103, 0.4304, 0.4348, 0.4196, 0.4238, 0.4342, 0.4295, 0.4397, 0.4279, 0.4274, 0.4368, 0.4224, 0.4065, 0.3792, 0.3688, 0.3710, 0.3743, 0.3825, 0.3789, 0.3466, 0.3470, 0.3366, 0.3239, 0.3275, 0.3265, 0.3319, 0.3140, 0.2521, 0.1576, 0.1871, 0.1438, 0.1505, 0.3473];\n\nb2sys = [-0.0159, -0.0095, -0.0072, -0.0104, -0.0109, -0.0121, -0.0126, -0.0127, -0.0140, -0.0144, -0.0141, -0.0127, -0.0121, -0.0115, -0.0100, -0.0092, -0.0093, -0.0088, -0.0083, -0.0074, -0.0063, -0.0062, -0.0068, -0.0077, -0.0065, -0.0062, -0.0061, -0.0069, -0.0074, -0.0079, -0.0074, -0.0072, -0.0072, -0.0071, -0.0069, -0.0061, -0.0059, -0.0059, -0.0064, -0.0064, -0.0058, -0.0060, -0.0063, -0.0066, -0.0066, -0.0060, -0.0056, -0.0053, -0.0042, -0.0044, -0.0046, -0.0047, -0.0039, -0.0039, -0.0041, -0.0041, -0.0042, -0.0039, -0.0039, -0.0042, -0.0047, -0.0048, -0.0048, -0.0047, -0.0048, -0.0050, -0.0050, -0.0057, -0.0061, -0.0059, -0.0058, -0.0061, -0.0060, -0.0064, -0.0062, -0.0059, -0.0058, -0.0051, -0.0045, -0.0031, -0.0028, -0.0025, -0.0026, -0.0028, -0.0031, -0.0015, -0.0023, -0.0017, -0.0008, -0.0005, -0.0006, -0.0017, -0.0002, 0.0034, 0.0072, 0.0055, 0.0076, 0.0067, -0.0010];\n\nb3sys = [0.0803, 0.0540, 0.0370, 0.0473, 0.0523, 0.0661, 0.0712, 0.0706, 0.0740, 0.0649, 0.0598, 0.0539, 0.0528, 0.0517, 0.0440, 0.0391, 0.0395, 0.0351, 0.0349, 0.0310, 0.0283, 0.0313, 0.0361, 0.0430, 0.0402, 0.0397, 0.0445, 0.0522, 0.0559, 0.0573, 0.0594, 0.0558, 0.0565, 0.0576, 0.0595, 0.0555, 0.0537, 0.0563, 0.0585, 0.0554, 0.0527, 0.0518, 0.0508, 0.0520, 0.0540, 0.0477, 0.0460, 0.0449, 0.0417, 0.0403, 0.0403, 0.0368, 0.0315, 0.0318, 0.0313, 0.0320, 0.0339, 0.0318, 0.0327, 0.0344, 0.0328, 0.0332, 0.0327, 0.0327, 0.0316, 0.0313, 0.0321, 0.0333, 0.0357, 0.0374, 0.0377, 0.0387, 0.0393, 0.0411, 0.0429, 0.0399, 0.0399, 0.0374, 0.0392, 0.0313, 0.0301, 0.0277, 0.0296, 0.0301, 0.0353, 0.0272, 0.0323, 0.0271, 0.0220, 0.0181, 0.0201, 0.0287, 0.0247, 0.0132, -0.0076, 0.0020, 0.0111, 0.0193, 0.0499];\n\nb4sys = [-0.1501, -0.1228, -0.0808, -0.0885, -0.0938, -0.1243, -0.1373, -0.1365, -0.1321, -0.1065, -0.0914, -0.0858, -0.0869, -0.0889, -0.0795, -0.0730, -0.0789, -0.0686, -0.0709, -0.0656, -0.0649, -0.0730, -0.0837, -0.0991, -0.0991, -0.0994, -0.1155, -0.1317, -0.1397, -0.1393, -0.1493, -0.1401, -0.1436, -0.1469, -0.1514, -0.1462, -0.1435, -0.1527, -0.1569, -0.1470, -0.1421, -0.1372, -0.1325, -0.1346, -0.1396, -0.1258, -0.1251, -0.1222, -0.1223, -0.1176, -0.1140, -0.1041, -0.0941, -0.0943, -0.0915, -0.0944, -0.0974, -0.0942, -0.0981, -0.1008, -0.0906, -0.0914, -0.0905, -0.0892, -0.0843, -0.0814, -0.0828, -0.0798, -0.0812, -0.0881, -0.0900, -0.0918, -0.0953, -0.0987, -0.1061, -0.1008, -0.1016, -0.0989, -0.1059, -0.0925, -0.0892, -0.0850, -0.0853, -0.0846, -0.0982, -0.0852, -0.0945, -0.0857, -0.0796, -0.0707, -0.0785, -0.0920, -0.0938, -0.0881, -0.0516, -0.0596, -0.0959, -0.1148, -0.1346];\n\nbb1sys = [0.0109, 0.0057, -0.0092, 0.0009, 0.0010, -0.0028, 0.0130, 0.0147, 0.0285, 0.0265, 0.0297, 0.0133, 0.0122, 0.0046, -0.0007, -0.0089, -0.0048, -0.0151, -0.0153, -0.0250, -0.0265, -0.0260, -0.0188, -0.0102, -0.0135, -0.0111, -0.0116, -0.0062, -0.0065, -0.0049, -0.0109, -0.0071, -0.0047, -0.0005, -0.0022, -0.0051, -0.0027, -0.0019, 0.0032, 0.0027, 0.0015, 0.0093, 0.0119, 0.0151, 0.0166, 0.0150, 0.0164, 0.0153, 0.0089, 0.0104, 0.0144, 0.0171, 0.0134, 0.0115, 0.0121, 0.0113, 0.0137, 0.0126, 0.0177, 0.0221, 0.0207, 0.0225, 0.0195, 0.0200, 0.0138, 0.0161, 0.0153, 0.0158, 0.0203, 0.0175, 0.0126, 0.0106, 0.0150, 0.0118, 0.0132, 0.0086, -0.0042, -0.0067, -0.0134, -0.0235, -0.0258, -0.0253, -0.0264, -0.0226, -0.0171, -0.0254, -0.0166, -0.0132, -0.0212, -0.0200, -0.0091, 0.0090, -0.0122, -0.0357, -0.0325, -0.0411, -0.1006, -0.0879, -0.0354];\n\nbb2sys = [0.1002, 0.0042, 0.0673, 0.0958, 0.0934, 0.1050, 0.0760, 0.0961, 0.0747, 0.1273, 0.1526, 0.1639, 0.1661, 0.1768, 0.1778, 0.2003, 0.1885, 0.2160, 0.1958, 0.2093, 0.1862, 0.1667, 0.1384, 0.1136, 0.1043, 0.0905, 0.0725, 0.0420, 0.0482, 0.0527, 0.0578, 0.0668, 0.0580, 0.0365, 0.0330, 0.0381, 0.0390, 0.0291, 0.0197, 0.0376, 0.0382, 0.0233, 0.0370, 0.0220, 0.0080, 0.0245, 0.0239, 0.0223, 0.0218, 0.0345, 0.0211, 0.0335, 0.0397, 0.0417, 0.0505, 0.0408, 0.0304, 0.0354, 0.0133, 0.0041, 0.0246, 0.0162, 0.0390, 0.0422, 0.0632, 0.0671, 0.0735, 0.0981, 0.0909, 0.0943, 0.0997, 0.1113, 0.1005, 0.1138, 0.0996, 0.1214, 0.1495, 0.1499, 0.1536, 0.1848, 0.1974, 0.1895, 0.1907, 0.1752, 0.1415, 0.1633, 0.1384, 0.1197, 0.1383, 0.1457, 0.1053, 0.0424, 0.0896, 0.0885, 0.0706, 0.1113, 0.1222, 0.0819, -0.0379];\n\nbb3sys = [-0.1603, 0.0299, -0.0993, -0.1550, -0.1598, -0.1870, -0.1417, -0.1812, -0.1503, -0.2395, -0.2899, -0.2987, -0.3033, -0.3210, -0.3210, -0.3583, -0.3309, -0.3783, -0.3402, -0.3615, -0.3184, -0.2835, -0.2306, -0.1873, -0.1720, -0.1473, -0.1148, -0.0594, -0.0732, -0.0851, -0.0961, -0.1148, -0.0993, -0.0612, -0.0585, -0.0690, -0.0728, -0.0538, -0.0361, -0.0690, -0.0702, -0.0445, -0.0693, -0.0414, -0.0161, -0.0444, -0.0431, -0.0412, -0.0369, -0.0607, -0.0365, -0.0595, -0.0681, -0.0714, -0.0878, -0.0670, -0.0508, -0.0602, -0.0189, -0.0038, -0.0408, -0.0255, -0.0672, -0.0754, -0.1146, -0.1239, -0.1390, -0.1852, -0.1775, -0.1832, -0.1911, -0.2121, -0.1920, -0.2135, -0.1888, -0.2293, -0.2777, -0.2787, -0.2881, -0.3462, -0.3735, -0.3572, -0.3647, -0.3347, -0.2745, -0.3147, -0.2677, -0.2317, -0.2581, -0.2721, -0.1976, -0.0915, -0.1740, -0.1674, -0.1432, -0.2264, -0.2249, -0.1569, 0.0681];\n\nbb4sys = [0.0565, -0.0661, 0.0246, 0.0586, 0.0738, 0.0975, 0.0814, 0.1062, 0.0994, 0.1377, 0.1703, 0.1604, 0.1633, 0.1715, 0.1698, 0.1859, 0.1625, 0.1854, 0.1631, 0.1710, 0.1463, 0.1289, 0.0976, 0.0762, 0.0705, 0.0576, 0.0406, 0.0107, 0.0217, 0.0332, 0.0420, 0.0546, 0.0468, 0.0272, 0.0309, 0.0387, 0.0431, 0.0314, 0.0204, 0.0382, 0.0389, 0.0258, 0.0383, 0.0222, 0.0087, 0.0212, 0.0201, 0.0208, 0.0143, 0.0278, 0.0147, 0.0270, 0.0283, 0.0300, 0.0394, 0.0240, 0.0190, 0.0246, 0.0001, -0.0061, 0.0138, 0.0051, 0.0285, 0.0360, 0.0591, 0.0669, 0.0800, 0.1067, 0.1098, 0.1126, 0.1148, 0.1265, 0.1141, 0.1223, 0.1104, 0.1336, 0.1579, 0.1591, 0.1687, 0.2023, 0.2231, 0.2113, 0.2234, 0.2040, 0.1730, 0.1963, 0.1676, 0.1451, 0.1496, 0.1573, 0.1150, 0.0678, 0.1101, 0.1033, 0.1009, 0.1604, 0.1376, 0.1076, -0.0284];\n\n}\n\n\nfunction loadDiastolicVars(){\n\nb0sys = [-13.5670, -43.7777, -35.5221, -25.9772, -16.9931, -19.6683, -33.2858, -42.5220, -34.2517, -42.4833, -54.4375, -38.5925, -40.8119, -46.3014, -47.6314, -41.6665, -45.7369, -51.9290, -45.8559, -39.5605, -33.7657, -32.2810, -31.5797, -32.2816, -25.4400, -22.8873, -20.7911, -18.5570, -17.5306, -14.3488, -16.6395, -10.6475, -10.0847, -9.6460, -5.5000, -3.1184, -1.8889, 1.3652, 4.1129, 1.4862, -2.4740, -0.4150, -0.0497, -1.5833, 1.2090, 1.2834, -0.4438, -0.2325, -2.1989, -0.8411, 0.1678, 0.8079, -1.1219, -4.8133, -8.1979, -6.7520, -3.5660, 1.0387, 1.6962, 1.7174, -1.1808, -1.9286, -0.6762, 0.0177, 1.8242, 3.3864, 1.4518, -0.2228, -1.2686, -1.1771, -1.5905, 1.3907, 5.7059, 12.6597, 14.3993, 17.6818, 11.9170, 9.2777, 5.8584, 9.3245, 16.2286, 15.2268, 10.4724, 5.2365, 10.1259, 8.7996, 7.3808, 8.2409, 16.3443, 13.6814, -2.2305, 7.1024, 22.5224, 7.1688, 10.9219, 0.0292, -7.4708, 17.4158, -2.7250];\n\nba1sys = [-1.1325, 1.9512, 1.6542, 2.0924, 2.2497, 2.3137, 2.7679, 3.0229, 2.7721, 3.1554, 3.0764, 2.3768, 2.5241, 2.6717, 2.9586, 2.9392, 2.9396, 2.9378, 3.0516, 2.8551, 2.9223, 2.6018, 2.3929, 2.6349, 2.7183, 2.5652, 2.6849, 2.4292, 2.5085, 2.3673, 2.3516, 2.2971, 2.4662, 2.4037, 2.2058, 2.0845, 1.9380, 1.8159, 1.8155, 1.9999, 2.0859, 1.9078, 1.8113, 1.7827, 1.7298, 1.6318, 1.6936, 1.6130, 1.6982, 1.6919, 1.6387, 1.7778, 1.8103, 1.8058, 2.0298, 2.0613, 1.8329, 1.7975, 1.5592, 1.6924, 1.8960, 1.8974, 1.6316, 1.3931, 1.4415, 1.5296, 1.5557, 1.7851, 1.8480, 1.9498, 1.9246, 1.7403, 1.7240, 1.3459, 1.3957, 1.3880, 1.6817, 1.6967, 1.6874, 1.5374, 1.2597, 1.0841, 1.4733, 1.5165, 1.4465, 1.6042, 1.9753, 1.8093, 1.4613, 1.7899, 2.0458, 1.4245, 1.2411, 2.0574, 1.7121, 1.3826, 1.9240, 1.6902, 3.8134];\n\nba2sys = [-1.7078, -3.8763, -3.2001, -3.8188, -3.7873, -3.7117, -4.0941, -4.2155, -3.6109, -3.8233, -3.5785, -3.1326, -3.3547, -3.5156, -3.7580, -3.8754, -3.8633, -3.7832, -3.9216, -3.5847, -3.5330, -3.2278, -2.9101, -3.0487, -3.2535, -3.2543, -3.4699, -3.0989, -3.1093, -3.0068, -2.9622, -2.8656, -2.9361, -2.8587, -2.7946, -2.7566, -2.5612, -2.5509, -2.5332, -2.7504, -2.8319, -2.6838, -2.6253, -2.6894, -2.6076, -2.5106, -2.4801, -2.4272, -2.4926, -2.4301, -2.3829, -2.4652, -2.4361, -2.3310, -2.4940, -2.4814, -2.2802, -2.2844, -2.1909, -2.3499, -2.4788, -2.4107, -2.0498, -1.7224, -1.8531, -1.8957, -2.0588, -2.3148, -2.3626, -2.3300, -2.2012, -1.9434, -1.9265, -1.7148, -1.9442, -1.9866, -2.3045, -2.2055, -2.0515, -1.8954, -1.7964, -1.7857, -2.2295, -2.1802, -1.9666, -2.2123, -2.5467, -1.8703, -1.5844, -2.0949, -2.0636, -1.2884, -1.1587, -2.1429, -1.5447, -1.5163, -1.6304, -1.3304, -2.3052];\n\nba3sys = [28.8607, 28.8717, 22.4882, 24.4956, 23.1323, 22.8638, 22.3138, 22.1584, 17.4453, 16.9605, 15.2542, 15.4931, 16.1453, 16.4588, 16.7192, 17.5857, 17.2310, 15.9238, 17.0729, 14.9465, 14.1257, 12.8399, 11.2038, 11.5875, 13.5284, 13.6720, 14.9131, 12.2737, 11.7413, 11.4653, 11.2382, 10.1755, 10.2311, 10.1710, 11.4006, 11.9122, 10.5284, 11.3987, 11.0415, 12.2222, 12.5224, 12.7489, 12.8018, 13.4925, 12.8518, 12.1368, 11.7414, 12.1673, 12.7697, 12.0592, 11.4230, 11.0582, 10.7708, 9.8828, 10.6089, 10.1310, 9.0883, 9.2486, 9.9497, 11.1189, 11.4555, 10.6569, 8.2301, 6.2104, 7.4867, 8.1805, 9.8910, 11.3445, 11.0795, 9.7844, 8.7588, 6.9646, 7.7741, 8.8370, 11.1527, 11.7883, 13.3873, 11.4045, 9.5688, 9.7989, 11.1013, 12.1680, 13.8392, 12.4214, 11.6878, 13.8638, 14.6551, 8.5537, 8.5531, 11.8906, 8.7608, 5.4006, 5.4827, 8.7073, 6.0756, 7.1831, 5.8484, 3.6898, 3.5243];\n\nba4sys = [-81.1719, -57.6407, -41.2990, -38.8551, -35.1791, -35.7152, -27.6548, -27.6854, -15.4161, -12.0012, -9.8518, -14.1216, -12.9930, -11.9729, -10.3567, -10.8233, -10.5610, -7.0752, -10.1336, -5.3128, -2.6863, -0.8793, 1.5782, 0.5188, -4.0414, -3.1603, -5.2628, 1.0228, 3.3022, 3.7471, 3.1551, 7.4446, 6.9534, 5.6614, -0.0691, -2.7527, 0.4557, -2.5982, -0.7368, -3.4789, -3.8212, -6.8520, -7.7129, -9.1732, -6.9268, -4.9164, -4.8147, -8.1046, -10.7769, -8.6670, -6.0839, -4.0097, -4.1791, -2.9487, -5.3076, -3.6573, -0.4962, -0.6268, -4.5187, -8.0750, -8.5302, -6.2357, -0.4293, 3.6700, 0.3209, -2.7140, -7.5275, -10.9345, -8.9995, -3.6954, -1.7051, 2.6064, -2.0610, -8.9553, -15.7051, -17.7697, -21.1645, -13.2029, -8.1664, -11.7858, -18.2966, -22.5467, -23.1801, -17.9441, -19.1724, -26.1613, -24.7762, -10.4574, -13.7014, -20.3017, -9.0684, -5.1633, -6.2290, -6.9730, -5.5880, -10.5716, -7.4136, 3.0431, 8.0191];\n\nb1sys = [0.4118, 0.4741, 0.4425, 0.3556, 0.2916, 0.3203, 0.3986, 0.4632, 0.4233, 0.4660, 0.5690, 0.5015, 0.5119, 0.5495, 0.5434, 0.4983, 0.5321, 0.5860, 0.5356, 0.5025, 0.4575, 0.4720, 0.4845, 0.4779, 0.4210, 0.4141, 0.3921, 0.3937, 0.3838, 0.3712, 0.3924, 0.3509, 0.3368, 0.3398, 0.3246, 0.3161, 0.3178, 0.3031, 0.2849, 0.2950, 0.3229, 0.3217, 0.3277, 0.3439, 0.3277, 0.3350, 0.3463, 0.3529, 0.3643, 0.3572, 0.3552, 0.3404, 0.3561, 0.3871, 0.4011, 0.3884, 0.3807, 0.3494, 0.3625, 0.3556, 0.3668, 0.3747, 0.3859, 0.3980, 0.3810, 0.3667, 0.3836, 0.3835, 0.3885, 0.3820, 0.3900, 0.3789, 0.3493, 0.3265, 0.3118, 0.2899, 0.3206, 0.3418, 0.3719, 0.3581, 0.3267, 0.3504, 0.3634, 0.4039, 0.3722, 0.3767, 0.3660, 0.3742, 0.3376, 0.3408, 0.4491, 0.4266, 0.3231, 0.3913, 0.3914, 0.5124, 0.5394, 0.3737, 0.4042];\n\nb2sys = [0.0003, -0.0029, -0.0025, 0.0003, 0.0006, -0.0015, -0.0021, -0.0051, -0.0055, -0.0072, -0.0112, -0.0094, -0.0092, -0.0106, -0.0102, -0.0073, -0.0080, -0.0101, -0.0086, -0.0082, -0.0075, -0.0081, -0.0091, -0.0097, -0.0070, -0.0056, -0.0042, -0.0045, -0.0047, -0.0040, -0.0047, -0.0034, -0.0033, -0.0036, -0.0030, -0.0025, -0.0027, -0.0020, -0.0018, -0.0018, -0.0028, -0.0029, -0.0029, -0.0030, -0.0027, -0.0025, -0.0031, -0.0033, -0.0037, -0.0040, -0.0038, -0.0029, -0.0036, -0.0049, -0.0058, -0.0055, -0.0050, -0.0037, -0.0033, -0.0029, -0.0036, -0.0042, -0.0052, -0.0060, -0.0045, -0.0046, -0.0047, -0.0048, -0.0049, -0.0052, -0.0063, -0.0060, -0.0054, -0.0048, -0.0037, -0.0031, -0.0046, -0.0056, -0.0073, -0.0073, -0.0058, -0.0059, -0.0056, -0.0071, -0.0063, -0.0060, -0.0058, -0.0080, -0.0067, -0.0062, -0.0095, -0.0107, -0.0080, -0.0079, -0.0095, -0.0137, -0.0152, -0.0096, -0.0133];\n\nb3sys = [-0.0263, -0.0496, -0.0428, -0.0543, -0.0481, -0.0388, -0.0592, -0.0392, -0.0269, -0.0191, -0.0014, 0.0059, 0.0039, 0.0106, 0.0067, -0.0149, -0.0146, -0.0013, -0.0063, -0.0030, -0.0012, 0.0063, 0.0143, 0.0203, 0.0038, -0.0066, -0.0150, -0.0121, -0.0090, -0.0129, -0.0114, -0.0169, -0.0182, -0.0141, -0.0129, -0.0137, -0.0100, -0.0117, -0.0081, -0.0113, -0.0094, -0.0082, -0.0071, -0.0061, -0.0052, -0.0086, -0.0075, -0.0065, -0.0061, -0.0005, -0.0004, -0.0096, -0.0078, -0.0019, 0.0028, 0.0002, -0.0007, -0.0064, -0.0098, -0.0144, -0.0124, -0.0079, 0.0017, 0.0074, -0.0055, -0.0044, -0.0045, -0.0063, -0.0053, -0.0022, 0.0071, 0.0072, 0.0068, 0.0144, 0.0089, 0.0095, 0.0186, 0.0253, 0.0382, 0.0413, 0.0385, 0.0373, 0.0276, 0.0317, 0.0273, 0.0209, 0.0184, 0.0330, 0.0280, 0.0239, 0.0277, 0.0507, 0.0497, 0.0285, 0.0458, 0.0821, 0.0752, 0.0478, 0.0238];\n\nb4sys = [0.0507, 0.1518, 0.1269, 0.1499, 0.1416, 0.1406, 0.2053, 0.1567, 0.1286, 0.1105, 0.0879, 0.0528, 0.0554, 0.0468, 0.0518, 0.0964, 0.1016, 0.0747, 0.0786, 0.0687, 0.0596, 0.0419, 0.0265, 0.0104, 0.0396, 0.0583, 0.0686, 0.0655, 0.0598, 0.0679, 0.0678, 0.0752, 0.0800, 0.0709, 0.0635, 0.0596, 0.0505, 0.0496, 0.0380, 0.0461, 0.0487, 0.0472, 0.0414, 0.0371, 0.0323, 0.0415, 0.0435, 0.0434, 0.0459, 0.0305, 0.0275, 0.0477, 0.0484, 0.0409, 0.0321, 0.0371, 0.0371, 0.0437, 0.0505, 0.0602, 0.0586, 0.0509, 0.0314, 0.0231, 0.0517, 0.0516, 0.0515, 0.0572, 0.0531, 0.0473, 0.0279, 0.0262, 0.0244, -0.0045, -0.0004, -0.0089, -0.0278, -0.0412, -0.0675, -0.0754, -0.0835, -0.0777, -0.0497, -0.0486, -0.0379, -0.0216, -0.0173, -0.0361, -0.0305, -0.0268, -0.0118, -0.0701, -0.0852, -0.0270, -0.0634, -0.1555, -0.1166, -0.0772, 0.0586];\n\nbb1sys = [-0.0087, -0.0191, -0.0674, -0.0796, -0.0641, -0.0689, -0.0938, -0.0631, -0.0371, -0.0294, -0.0340, -0.0475, -0.0504, -0.0493, -0.0595, -0.0817, -0.0765, -0.0647, -0.0616, -0.0683, -0.0664, -0.0620, -0.0586, -0.0440, -0.0469, -0.0566, -0.0663, -0.0730, -0.0637, -0.0681, -0.0675, -0.0763, -0.0730, -0.0667, -0.0713, -0.0779, -0.0868, -0.0950, -0.0883, -0.0881, -0.0860, -0.0801, -0.0794, -0.0845, -0.0870, -0.0924, -0.0895, -0.0851, -0.0859, -0.0865, -0.0933, -0.0928, -0.0819, -0.0736, -0.0692, -0.0753, -0.0810, -0.0821, -0.0904, -0.0871, -0.0775, -0.0731, -0.0748, -0.0781, -0.0808, -0.0669, -0.0676, -0.0663, -0.0765, -0.0778, -0.0723, -0.0787, -0.0694, -0.0650, -0.0745, -0.0708, -0.0691, -0.0758, -0.0715, -0.0630, -0.0656, -0.0718, -0.0848, -0.0919, -0.0743, -0.0624, -0.0685, -0.0481, -0.0421, -0.0499, -0.0522, -0.0223, -0.0350, -0.0746, -0.0340, -0.0443, -0.0193, -0.0183, 0.0627];\n\nbb2sys = [-0.1202, 0.1992, 0.3133, 0.4423, 0.3962, 0.4499, 0.6243, 0.5120, 0.3660, 0.3572, 0.4004, 0.3550, 0.3968, 0.4299, 0.4837, 0.5737, 0.5824, 0.5498, 0.5196, 0.5134, 0.4876, 0.4496, 0.4152, 0.3694, 0.3676, 0.3787, 0.3974, 0.4005, 0.3744, 0.3759, 0.3777, 0.3958, 0.3922, 0.3688, 0.3492, 0.3470, 0.3703, 0.3856, 0.3640, 0.3736, 0.3920, 0.3635, 0.3497, 0.3665, 0.3703, 0.3860, 0.3834, 0.3606, 0.3821, 0.3748, 0.3894, 0.4036, 0.3736, 0.3513, 0.3504, 0.3769, 0.3819, 0.3621, 0.3640, 0.3514, 0.3326, 0.3224, 0.3067, 0.3064, 0.3148, 0.2582, 0.2556, 0.2738, 0.3143, 0.3354, 0.3150, 0.3279, 0.2820, 0.1958, 0.2201, 0.1938, 0.2114, 0.2487, 0.2508, 0.2057, 0.1577, 0.1751, 0.2636, 0.3179, 0.2451, 0.2044, 0.2633, 0.1904, 0.1473, 0.1898, 0.2641, 0.0801, 0.0837, 0.3209, 0.1515, 0.1613, 0.2050, 0.1310, 0.0422];\n\nbb3sys = [0.2977, -0.2879, -0.4650, -0.7299, -0.6572, -0.7699, -1.0803, -0.8671, -0.6077, -0.5855, -0.6627, -0.5818, -0.6637, -0.7314, -0.8241, -0.9870, -1.0084, -0.9515, -0.8956, -0.8848, -0.8388, -0.7751, -0.7120, -0.6297, -0.6261, -0.6382, -0.6642, -0.6670, -0.6243, -0.6244, -0.6258, -0.6548, -0.6484, -0.6116, -0.5757, -0.5661, -0.6072, -0.6354, -0.6035, -0.6168, -0.6551, -0.6077, -0.5807, -0.6098, -0.6203, -0.6467, -0.6422, -0.6019, -0.6441, -0.6317, -0.6552, -0.6792, -0.6278, -0.5879, -0.5851, -0.6294, -0.6401, -0.6004, -0.5976, -0.5716, -0.5377, -0.5217, -0.4907, -0.4907, -0.5040, -0.4028, -0.3964, -0.4312, -0.5003, -0.5421, -0.5067, -0.5282, -0.4467, -0.2892, -0.3286, -0.2807, -0.3145, -0.3832, -0.3923, -0.3147, -0.2201, -0.2530, -0.4153, -0.5147, -0.3873, -0.3117, -0.4213, -0.2951, -0.2208, -0.2958, -0.4295, -0.0982, -0.1047, -0.5246, -0.2269, -0.2416, -0.3492, -0.2054, -0.0520];\n\nbb4sys = [-0.2691, 0.0508, 0.1062, 0.2906, 0.2638, 0.3469, 0.5056, 0.3759, 0.2427, 0.2225, 0.2631, 0.2245, 0.2771, 0.3246, 0.3686, 0.4563, 0.4748, 0.4469, 0.4150, 0.4109, 0.3872, 0.3605, 0.3258, 0.2818, 0.2792, 0.2747, 0.2789, 0.2770, 0.2595, 0.2561, 0.2543, 0.2643, 0.2607, 0.2487, 0.2310, 0.2186, 0.2401, 0.2568, 0.2493, 0.2503, 0.2772, 0.2576, 0.2402, 0.2548, 0.2656, 0.2773, 0.2749, 0.2545, 0.2821, 0.2776, 0.2867, 0.2963, 0.2717, 0.2503, 0.2470, 0.2655, 0.2738, 0.2472, 0.2383, 0.2195, 0.2006, 0.1951, 0.1753, 0.1763, 0.1810, 0.1272, 0.1218, 0.1425, 0.1745, 0.2020, 0.1847, 0.1939, 0.1515, 0.0669, 0.0822, 0.0560, 0.0776, 0.1165, 0.1289, 0.0928, 0.0326, 0.0528, 0.1436, 0.1988, 0.1349, 0.0907, 0.1535, 0.0924, 0.0564, 0.0953, 0.1659, -0.0105, -0.0066, 0.2072, 0.0567, 0.0645, 0.1599, 0.0662, -0.0180];\n\n}\n\n\n/* ]]> */\n\n/* <![CDATA[ */\n\nvar lastChar = '';\n\nfunction log(i){\nreturn Math.log(i) * Math.LOG10E;   \n}\n\nfunction ln(i){\nreturn Math.log(i);\n}\n\nfunction sq(i){\nreturn i * i;\n}\n\nfunction sqr(i){\nreturn Math.sqrt(i);\n}\n\n\nfunction power(x,y){\nreturn Math.pow(x,y);\n}\n\nfunction eTo(x){\nreturn Math.exp(x);\n}\n\n\nfunction fixDP(r, dps) {\nif (isNaN(r)) return \"NaN\";\nvar msign = '';\nif (r < 0) msign = '-';\nx = Math.abs(r);\nif (x > Math.pow(10, 21)) return msign + x.toString();\nvar m = Math.round(x * Math.pow(10, dps)).toString();\nif (dps == 0) return msign + m;\nwhile (m.length <= dps) m = \"0\" + m;\nreturn msign + m.substring(0, m.length - dps) + \".\" + m.substring(m.length - dps);\n}\n\nfunction alertNaN(){\nalert('This field is improperly formatted. You may only input the digits 0-9 and a decimal point.');  \ndoCalc = false; \nclrResults();\n}\n\nfunction validNumberField(event) {\nvar field = event.target;\n\nif(field && field != 'undefined' && field.attributes.type.nodeValue && (field.attributes.type.nodeValue == 'number')) {\nvar val = field.value;\nvar charCode = event.charCode;\nvar key = String.fromCharCode(charCode);\n\nif(charCode == 0 || charCode == 13) {\n  return true;\n}\n\nif(key == ' ') {\nalert('Numeric field cannot contain spaces.');\n  return false;\n}\t\n\t\t\nif(key == '.') { return validDecimalPoint(val, key); }\nif(key == '-') { return validMinus(val, key); }\n\nif(isNaN(parseInt(key))) {\nalertNaN();\nreturn false;\n}\n\t\nreturn validFloat(val, key);\n}\nreturn true;\n}\n\nfunction validDecimalPoint(val, key) {\nif(val.length == 0 && lastChar != '.') {\n  lastChar = '.';\n  return true;\n}\nif(val.indexOf('.') >= 0 || lastChar == '.') {\n alertNaN();\n return false;\n}\nif(validFloat(val, key)) {\n lastChar = key;\n return true;\n}\nlastChar = '';\nreturn false;\n}\n\nfunction validMinus(val, key) {\nif(val.length == 0) {\n  return true;\n}\nif(val.length > 1) {\n alertNaN();\n return false;\n}\nreturn validFloat(val, key);\n}\n\n\nfunction validFloat(val, key) {\nvar currentVal = parseFloat(val + key);\nif(isNaN(val + key) || isNaN(currentVal)) {\nalertNaN();\nreturn false;\n}\nreturn true;\n}\n\nfunction formKeyDown(event) {\nvar field = event.target;\n\nif(field && field != 'undefined' && field.attributes.type.nodeValue && (field.attributes.type.nodeValue == 'number')) {\n  var val = field.value;\n  var keyCode = event.keyCode;\n  if(keyCode == 8 || keyCode == 127) {\n    // backspace or delete\n    if(lastChar == '.') {\n      lastChar = '';\n    }\n    if(field.value.length == 3 && field.value[0] == '0' && field.value[1] == '.') {\n      // this handles a backspace on an input like \".5\", which is saved internally as \"0.5\"\n      //   otherwise, if you leave the field after the backspace, it retains \"0.5\" as the value, most likely an iOS bug\n      field.value = ''; \n    }\n  }\n}\nclrResults();\n}\n\nfunction clrValue(field) {\n field.value = '';\n lastChar = '';\n}\n\nvar currenttimeout;\n\n\nvar calctxt = ''; \nvar xmltxt = ''; \nvar xmlresult = '';\nvar htmtxt = ''; \nvar postNow = false;\nvar printing = false;\nvar interptxt = '';\nvar interphtm = '';\nvar interpxml = '';\n\nfunction BloodPressurePercentBoysRevised_fx() {\ncurrenttimeout = self.setTimeout('minMaxCheck();', 4500);\n\nwith(document.BloodPressurePercentBoysRevised_form){\n\n\ndoCalc = true;\nparam_value = parseFloat(Age_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Age_unit.options[Age_unit.selectedIndex].value.split('|');\nAge = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Height_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Height_unit.options[Height_unit.selectedIndex].value.split('|');\nHeight = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Systolic_BP_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Systolic_BP_unit.options[Systolic_BP_unit.selectedIndex].value.split('|');\nSystolic_BP = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Diastolic_BP_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Diastolic_BP_unit.options[Diastolic_BP_unit.selectedIndex].value.split('|');\nDiastolic_BP = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\ndp = 2;\nif (Age_unit.options[Age_unit.selectedIndex].text == 'yr'){\nif (parseFloat(Age_param.value) == Math.floor(parseFloat(Age_param.value))){ Age_Months = (12 * parseFloat(Age_param.value)) + 6.5; } else { Age_Months = 12 * parseFloat(Age_param.value); };\n}\nif (Age_unit.options[Age_unit.selectedIndex].text == 'mo'){\nif (parseFloat(Age_param.value) == Math.floor(parseFloat(Age_param.value))){ Age_Months = parseFloat(Age_param.value) + 0.5; } else { Age_Months = parseFloat(Age_param.value); };\n}\nif(Age_Months < 1){L = 0.511237696; M = 52.6959753; S = 0.048692684;}\nelse if(Age_Months < 2){L = -0.45224446; M = 56.62842855; S = 0.04411683;}\nelse if(Age_Months < 3){L = -0.990594599; M = 59.60895343; S = 0.041795583;}\nelse if(Age_Months < 4){L = -1.285837689; M = 62.07700027; S = 0.040454126;}\nelse if(Age_Months < 5){L = -1.43031238; M = 64.2168641; S = 0.039633879;}\nelse if(Age_Months < 6){L = -1.47657547; M = 66.1253149; S = 0.039123813;}\nelse if(Age_Months < 7){L = -1.456837849; M = 67.8601799; S = 0.038811994;}\nelse if(Age_Months < 8){L = -1.391898768; M = 69.45908458; S = 0.038633209;}\nelse if(Age_Months < 9){L = -1.29571459; M = 70.94803912; S = 0.038546833;}\nelse if(Age_Months < 10){L = -1.177919048; M = 72.34586111; S = 0.038526262;}\nelse if(Age_Months < 11){L = -1.045326049; M = 73.6666541; S = 0.038553387;}\nelse if(Age_Months < 12){L = -0.902800887; M = 74.92129717; S = 0.038615501;}\nelse if(Age_Months < 13){L = -0.753908107; M = 76.11837536; S = 0.038703461;}\nelse if(Age_Months < 14){L = -0.601263523; M = 77.26479911; S = 0.038810557;}\nelse if(Age_Months < 15){L = -0.446805039; M = 78.36622309; S = 0.038931784;}\nelse if(Age_Months < 16){L = -0.291974772; M = 79.4273405; S = 0.039063356;}\nelse if(Age_Months < 17){L = -0.13784767; M = 80.45209492; S = 0.039202382;}\nelse if(Age_Months < 18){L = 0.014776155; M = 81.44383603; S = 0.039346629;}\nelse if(Age_Months < 19){L = 0.165304169; M = 82.40543643; S = 0.039494365;}\nelse if(Age_Months < 20){L = 0.313301809; M = 83.33938063; S = 0.039644238;}\nelse if(Age_Months < 21){L = 0.458455471; M = 84.24783394; S = 0.039795189;}\nelse if(Age_Months < 22){L = 0.600544631; M = 85.13269658; S = 0.039946388;}\nelse if(Age_Months < 23){L = 0.739438953; M = 85.9956488; S = 0.040097181;}\nelse if(Age_Months < 24){L = 0.875000447; M = 86.8381751; S = 0.04024706;}\nelse if(Age_Months < 25){L = 1.00720807; M = 86.86160934; S = 0.040395626;}\nelse if(Age_Months < 26){L = 0.837251351; M = 87.65247282; S = 0.040577525;}\nelse if(Age_Months < 27){L = 0.681492975; M = 88.42326434; S = 0.040723122;}\nelse if(Age_Months < 28){L = 0.538779654; M = 89.17549228; S = 0.040833194;}\nelse if(Age_Months < 29){L = 0.407697153; M = 89.91040853; S = 0.040909059;}\nelse if(Age_Months < 30){L = 0.286762453; M = 90.62907762; S = 0.040952433;}\nelse if(Age_Months < 31){L = 0.174489485; M = 91.33242379; S = 0.04096533;}\nelse if(Age_Months < 32){L = 0.069444521; M = 92.02127167; S = 0.040949976;}\nelse if(Age_Months < 33){L = -0.029720564; M = 92.69637946; S = 0.040908737;}\nelse if(Age_Months < 34){L = -0.124251789; M = 93.35846546; S = 0.040844062;}\nelse if(Age_Months < 35){L = -0.215288396; M = 94.00822923; S = 0.040758431;}\nelse if(Age_Months < 36){L = -0.30385434; M = 94.64636981; S = 0.040654312;}\nelse if(Age_Months < 37){L = -0.390918369; M = 95.27359106; S = 0.04053412;}\nelse if(Age_Months < 38){L = -0.254801167; M = 95.91474929; S = 0.040572876;}\nelse if(Age_Months < 39){L = -0.125654535; M = 96.54734328; S = 0.04061691;}\nelse if(Age_Months < 40){L = -0.00316735; M = 97.17191309; S = 0.040666414;}\nelse if(Age_Months < 41){L = 0.11291221; M = 97.78897727; S = 0.040721467;}\nelse if(Age_Months < 42){L = 0.222754969; M = 98.3990283; S = 0.040782045;}\nelse if(Age_Months < 43){L = 0.326530126; M = 99.00254338; S = 0.040848042;}\nelse if(Age_Months < 44){L = 0.42436156; M = 99.599977; S = 0.040919281;}\nelse if(Age_Months < 45){L = 0.516353108; M = 100.191764; S = 0.040995524;}\nelse if(Age_Months < 46){L = 0.602595306; M = 100.7783198; S = 0.041076485;}\nelse if(Age_Months < 47){L = 0.683170764; M = 101.3600411; S = 0.041161838;}\nelse if(Age_Months < 48){L = 0.758158406; M = 101.9373058; S = 0.041251224;}\nelse if(Age_Months < 49){L = 0.827636736; M = 102.5104735; S = 0.041344257;}\nelse if(Age_Months < 50){L = 0.891686306; M = 103.0798852; S = 0.041440534;}\nelse if(Age_Months < 51){L = 0.95039153; M = 103.645864; S = 0.041539635;}\nelse if(Age_Months < 52){L = 1.003830006; M = 104.208713; S = 0.041641136;}\nelse if(Age_Months < 53){L = 1.05213569; M = 104.7687256; S = 0.041744602;}\nelse if(Age_Months < 54){L = 1.0953669; M = 105.3261638; S = 0.041849607;}\nelse if(Age_Months < 55){L = 1.133652119; M = 105.8812823; S = 0.041955723;}\nelse if(Age_Months < 56){L = 1.167104213; M = 106.4343146; S = 0.042062532;}\nelse if(Age_Months < 57){L = 1.195845353; M = 106.9854769; S = 0.042169628;}\nelse if(Age_Months < 58){L = 1.220004233; M = 107.534968; S = 0.042276619;}\nelse if(Age_Months < 59){L = 1.239715856; M = 108.0829695; S = 0.042383129;}\nelse if(Age_Months < 60){L = 1.255121285; M = 108.6296457; S = 0.042488804;}\nelse if(Age_Months < 61){L = 1.266367398; M = 109.1751441; S = 0.042593311;}\nelse if(Age_Months < 62){L = 1.273606657; M = 109.7195954; S = 0.042696342;}\nelse if(Age_Months < 63){L = 1.276996893; M = 110.2631136; S = 0.042797615;}\nelse if(Age_Months < 64){L = 1.276701119; M = 110.8057967; S = 0.042896877;}\nelse if(Age_Months < 65){L = 1.272887366; M = 111.3477265; S = 0.042993904;}\nelse if(Age_Months < 66){L = 1.265728536; M = 111.8889694; S = 0.043088503;}\nelse if(Age_Months < 67){L = 1.255402281; M = 112.4295761; S = 0.043180513;}\nelse if(Age_Months < 68){L = 1.242090871; M = 112.9695827; S = 0.043269806;}\nelse if(Age_Months < 69){L = 1.225981067; M = 113.5090108; S = 0.043356287;}\nelse if(Age_Months < 70){L = 1.207263978; M = 114.0478678; S = 0.043439893;}\nelse if(Age_Months < 71){L = 1.186140222; M = 114.5861486; S = 0.043520597;}\nelse if(Age_Months < 72){L = 1.162796198; M = 115.1238315; S = 0.043598407;}\nelse if(Age_Months < 73){L = 1.137442868; M = 115.6608862; S = 0.043673359;}\nelse if(Age_Months < 74){L = 1.110286487; M = 116.1972691; S = 0.043745523;}\nelse if(Age_Months < 75){L = 1.081536236; M = 116.732925; S = 0.043815003;}\nelse if(Age_Months < 76){L = 1.05140374; M = 117.2677879; S = 0.043881929;}\nelse if(Age_Months < 77){L = 1.020102497; M = 117.8017819; S = 0.043946461;}\nelse if(Age_Months < 78){L = 0.987847213; M = 118.3348215; S = 0.044008785;}\nelse if(Age_Months < 79){L = 0.954853043; M = 118.8668123; S = 0.044069112;}\nelse if(Age_Months < 80){L = 0.921334742; M = 119.397652; S = 0.044127675;}\nelse if(Age_Months < 81){L = 0.887505723; M = 119.9272309; S = 0.044184725;}\nelse if(Age_Months < 82){L = 0.85357703; M = 120.455433; S = 0.044240532;}\nelse if(Age_Months < 83){L = 0.819756239; M = 120.9821362; S = 0.044295379;}\nelse if(Age_Months < 84){L = 0.786246296; M = 121.5072136; S = 0.044349559;}\nelse if(Age_Months < 85){L = 0.753244292; M = 122.0305342; S = 0.044403374;}\nelse if(Age_Months < 86){L = 0.720940222; M = 122.5519634; S = 0.04445713;}\nelse if(Age_Months < 87){L = 0.689515708; M = 123.0713645; S = 0.044511135;}\nelse if(Age_Months < 88){L = 0.659142731; M = 123.588599; S = 0.044565693;}\nelse if(Age_Months < 89){L = 0.629997853; M = 124.1035312; S = 0.044621104;}\nelse if(Age_Months < 90){L = 0.602203984; M = 124.6160161; S = 0.044677662;}\nelse if(Age_Months < 91){L = 0.575908038; M = 125.1259182; S = 0.044735646;}\nelse if(Age_Months < 92){L = 0.55123134; M = 125.6331012; S = 0.044795322;}\nelse if(Age_Months < 93){L = 0.528279901; M = 126.1374319; S = 0.044856941;}\nelse if(Age_Months < 94){L = 0.507143576; M = 126.6387804; S = 0.04492073;}\nelse if(Age_Months < 95){L = 0.487895344; M = 127.1370217; S = 0.044986899;}\nelse if(Age_Months < 96){L = 0.470590753; M = 127.6320362; S = 0.045055632;}\nelse if(Age_Months < 97){L = 0.455267507; M = 128.1237104; S = 0.045127088;}\nelse if(Age_Months < 98){L = 0.441945241; M = 128.6119383; S = 0.045201399;}\nelse if(Age_Months < 99){L = 0.430625458; M = 129.096622; S = 0.045278671;}\nelse if(Age_Months < 100){L = 0.421291648; M = 129.5776723; S = 0.045358979;}\nelse if(Age_Months < 101){L = 0.413909588; M = 130.0550101; S = 0.045442372;}\nelse if(Age_Months < 102){L = 0.408427813; M = 130.5285669; S = 0.045528869;}\nelse if(Age_Months < 103){L = 0.404778262; M = 130.9982857; S = 0.045618459;}\nelse if(Age_Months < 104){L = 0.402877077; M = 131.4641218; S = 0.045711105;}\nelse if(Age_Months < 105){L = 0.402625561; M = 131.9260439; S = 0.045806742;}\nelse if(Age_Months < 106){L = 0.40391127; M = 132.3840348; S = 0.045905281;}\nelse if(Age_Months < 107){L = 0.406609232; M = 132.838092; S = 0.046006604;}\nelse if(Age_Months < 108){L = 0.410583274; M = 133.2882291; S = 0.046110573;}\nelse if(Age_Months < 109){L = 0.415687443; M = 133.7344759; S = 0.046217028;}\nelse if(Age_Months < 110){L = 0.421767514; M = 134.1768801; S = 0.04632579;}\nelse if(Age_Months < 111){L = 0.428662551; M = 134.6155076; S = 0.046436662;}\nelse if(Age_Months < 112){L = 0.436206531; M = 135.0504433; S = 0.04654943;}\nelse if(Age_Months < 113){L = 0.44423; M = 135.4817925; S = 0.046663871;}\nelse if(Age_Months < 114){L = 0.45256176; M = 135.9096813; S = 0.046779748;}\nelse if(Age_Months < 115){L = 0.461030578; M = 136.3342577; S = 0.046896817;}\nelse if(Age_Months < 116){L = 0.469466904; M = 136.7556923; S = 0.047014827;}\nelse if(Age_Months < 117){L = 0.477704608; M = 137.1741794; S = 0.047133525;}\nelse if(Age_Months < 118){L = 0.48558272; M = 137.5899378; S = 0.047252654;}\nelse if(Age_Months < 119){L = 0.492947182; M = 138.0032114; S = 0.047371961;}\nelse if(Age_Months < 120){L = 0.499652617; M = 138.4142703; S = 0.047491194;}\nelse if(Age_Months < 121){L = 0.505564115; M = 138.8234114; S = 0.047610108;}\nelse if(Age_Months < 122){L = 0.510559047; M = 139.2309592; S = 0.047728463;}\nelse if(Age_Months < 123){L = 0.514528903; M = 139.6372663; S = 0.04784603;}\nelse if(Age_Months < 124){L = 0.517381177; M = 140.042714; S = 0.047962592;}\nelse if(Age_Months < 125){L = 0.519041285; M = 140.4477127; S = 0.048077942;}\nelse if(Age_Months < 126){L = 0.519454524; M = 140.8527022; S = 0.048191889;}\nelse if(Age_Months < 127){L = 0.518588072; M = 141.2581515; S = 0.048304259;}\nelse if(Age_Months < 128){L = 0.516433004; M = 141.6645592; S = 0.048414893;}\nelse if(Age_Months < 129){L = 0.513006312; M = 142.072452; S = 0.048523648;}\nelse if(Age_Months < 130){L = 0.508352901; M = 142.4823852; S = 0.048630402;}\nelse if(Age_Months < 131){L = 0.502547502; M = 142.8949403; S = 0.04873505;}\nelse if(Age_Months < 132){L = 0.495696454; M = 143.3107241; S = 0.048837504;}\nelse if(Age_Months < 133){L = 0.487939275; M = 143.7303663; S = 0.048937694;}\nelse if(Age_Months < 134){L = 0.479449924; M = 144.1545167; S = 0.049035564;}\nelse if(Age_Months < 135){L = 0.470437652; M = 144.5838414; S = 0.049131073;}\nelse if(Age_Months < 136){L = 0.461147305; M = 145.0190192; S = 0.049224189;}\nelse if(Age_Months < 137){L = 0.451858946; M = 145.4607359; S = 0.049314887;}\nelse if(Age_Months < 138){L = 0.442886661; M = 145.9096784; S = 0.049403145;}\nelse if(Age_Months < 139){L = 0.434576385; M = 146.3665278; S = 0.049488934;}\nelse if(Age_Months < 140){L = 0.427302633; M = 146.8319513; S = 0.049572216;}\nelse if(Age_Months < 141){L = 0.421464027; M = 147.3065929; S = 0.049652935;}\nelse if(Age_Months < 142){L = 0.417477538; M = 147.7910635; S = 0.049731004;}\nelse if(Age_Months < 143){L = 0.415771438; M = 148.2859294; S = 0.0498063;}\nelse if(Age_Months < 144){L = 0.416777012; M = 148.7917006; S = 0.04987865;}\nelse if(Age_Months < 145){L = 0.420919142; M = 149.3088178; S = 0.049947823;}\nelse if(Age_Months < 146){L = 0.428606007; M = 149.8376391; S = 0.050013518;}\nelse if(Age_Months < 147){L = 0.440218167; M = 150.3784267; S = 0.050075353;}\nelse if(Age_Months < 148){L = 0.456097443; M = 150.9313331; S = 0.050132858;}\nelse if(Age_Months < 149){L = 0.476536014; M = 151.4963887; S = 0.050185471;}\nelse if(Age_Months < 150){L = 0.501766234; M = 152.0734897; S = 0.050232532;}\nelse if(Age_Months < 151){L = 0.531951655; M = 152.6623878; S = 0.050273285;}\nelse if(Age_Months < 152){L = 0.567179725; M = 153.2626819; S = 0.050306885;}\nelse if(Age_Months < 153){L = 0.607456565; M = 153.8738124; S = 0.050332406;}\nelse if(Age_Months < 154){L = 0.652704121; M = 154.495058; S = 0.05034886;}\nelse if(Age_Months < 155){L = 0.702759868; M = 155.1255365; S = 0.050355216;}\nelse if(Age_Months < 156){L = 0.757379106; M = 155.7642086; S = 0.050350423;}\nelse if(Age_Months < 157){L = 0.816239713; M = 156.4098858; S = 0.050333444;}\nelse if(Age_Months < 158){L = 0.878947416; M = 157.0612415; S = 0.050303283;}\nelse if(Age_Months < 159){L = 0.945053486; M = 157.7168289; S = 0.050259018;}\nelse if(Age_Months < 160){L = 1.014046108; M = 158.3750929; S = 0.050199837;}\nelse if(Age_Months < 161){L = 1.085383319; M = 159.034399; S = 0.050125062;}\nelse if(Age_Months < 162){L = 1.158487278; M = 159.6930501; S = 0.05003418;}\nelse if(Age_Months < 163){L = 1.232768816; M = 160.3493168; S = 0.049926861;}\nelse if(Age_Months < 164){L = 1.307628899; M = 161.0014586; S = 0.049802977;}\nelse if(Age_Months < 165){L = 1.382473225; M = 161.6477515; S = 0.04966261;}\nelse if(Age_Months < 166){L = 1.456720479; M = 162.2865119; S = 0.049506051;}\nelse if(Age_Months < 167){L = 1.529810247; M = 162.9161202; S = 0.049333801;}\nelse if(Age_Months < 168){L = 1.601219573; M = 163.535045; S = 0.049146553;}\nelse if(Age_Months < 169){L = 1.670433444; M = 164.1418486; S = 0.04894519;}\nelse if(Age_Months < 170){L = 1.736995571; M = 164.7352199; S = 0.048730749;}\nelse if(Age_Months < 171){L = 1.800483802; M = 165.3139755; S = 0.048504404;}\nelse if(Age_Months < 172){L = 1.860518777; M = 165.8770715; S = 0.048267442;}\nelse if(Age_Months < 173){L = 1.916765525; M = 166.4236087; S = 0.04802123;}\nelse if(Age_Months < 174){L = 1.968934444; M = 166.9528354; S = 0.047767192;}\nelse if(Age_Months < 175){L = 2.016781776; M = 167.4641466; S = 0.047506783;}\nelse if(Age_Months < 176){L = 2.060109658; M = 167.9570814; S = 0.047241456;}\nelse if(Age_Months < 177){L = 2.098765817; M = 168.4313175; S = 0.04697265;}\nelse if(Age_Months < 178){L = 2.132642948; M = 168.8866644; S = 0.046701759;}\nelse if(Age_Months < 179){L = 2.16167779; M = 169.3230548; S = 0.046430122;}\nelse if(Age_Months < 180){L = 2.185849904; M = 169.7405351; S = 0.046159004;}\nelse if(Age_Months < 181){L = 2.205180153; M = 170.139255; S = 0.045889585;}\nelse if(Age_Months < 182){L = 2.219728869; M = 170.5194567; S = 0.045622955;}\nelse if(Age_Months < 183){L = 2.2295937; M = 170.881464; S = 0.045360101;}\nelse if(Age_Months < 184){L = 2.234907144; M = 171.2256717; S = 0.045101913;}\nelse if(Age_Months < 185){L = 2.235833767; M = 171.5525345; S = 0.044849174;}\nelse if(Age_Months < 186){L = 2.232567138; M = 171.8625576; S = 0.044602566;}\nelse if(Age_Months < 187){L = 2.2253265; M = 172.1562865; S = 0.044362674;}\nelse if(Age_Months < 188){L = 2.214353232; M = 172.4342983; S = 0.044129985;}\nelse if(Age_Months < 189){L = 2.199905902; M = 172.6971935; S = 0.043904897;}\nelse if(Age_Months < 190){L = 2.182262864; M = 172.9455898; S = 0.043687723;}\nelse if(Age_Months < 191){L = 2.161704969; M = 173.180112; S = 0.043478698;}\nelse if(Age_Months < 192){L = 2.138524662; M = 173.4013896; S = 0.043277987;}\nelse if(Age_Months < 193){L = 2.113023423; M = 173.6100518; S = 0.043085685;}\nelse if(Age_Months < 194){L = 2.085490286; M = 173.8067179; S = 0.042901835;}\nelse if(Age_Months < 195){L = 2.0562195; M = 173.9919998; S = 0.042726424;}\nelse if(Age_Months < 196){L = 2.025496648; M = 174.1664951; S = 0.042559396;}\nelse if(Age_Months < 197){L = 1.993598182; M = 174.3307855; S = 0.042400652;}\nelse if(Age_Months < 198){L = 1.960789092; M = 174.4854344; S = 0.042250063;}\nelse if(Age_Months < 199){L = 1.927320937; M = 174.6309856; S = 0.042107465;}\nelse if(Age_Months < 200){L = 1.89343024; M = 174.7679617; S = 0.041972676;}\nelse if(Age_Months < 201){L = 1.859337259; M = 174.8968634; S = 0.041845488;}\nelse if(Age_Months < 202){L = 1.825245107; M = 175.0181691; S = 0.041725679;}\nelse if(Age_Months < 203){L = 1.791339209; M = 175.1323345; S = 0.041613015;}\nelse if(Age_Months < 204){L = 1.757787065; M = 175.2397926; S = 0.041507249;}\nelse if(Age_Months < 205){L = 1.724738292; M = 175.340954; S = 0.041408129;}\nelse if(Age_Months < 206){L = 1.692324905; M = 175.4362071; S = 0.041315398;}\nelse if(Age_Months < 207){L = 1.660661815; M = 175.5259191; S = 0.041228796;}\nelse if(Age_Months < 208){L = 1.629847495; M = 175.6104358; S = 0.04114806;}\nelse if(Age_Months < 209){L = 1.599964788; M = 175.690083; S = 0.041072931;}\nelse if(Age_Months < 210){L = 1.571081817; M = 175.7651671; S = 0.04100315;}\nelse if(Age_Months < 211){L = 1.543252982; M = 175.8359757; S = 0.040938463;}\nelse if(Age_Months < 212){L = 1.516519998; M = 175.9027788; S = 0.040878617;}\nelse if(Age_Months < 213){L = 1.490912963; M = 175.9658293; S = 0.040823368;}\nelse if(Age_Months < 214){L = 1.466451429; M = 176.0253641; S = 0.040772475;}\nelse if(Age_Months < 215){L = 1.44314546; M = 176.081605; S = 0.040725706;}\nelse if(Age_Months < 216){L = 1.420996665; M = 176.1347593; S = 0.040682834;}\nelse if(Age_Months < 217){L = 1.399999187; M = 176.1850208; S = 0.04064364;}\nHeight_Z =  (power((Height / M), L) - 1) / (L * S);\n\n\n\n}\n\n}\n\nfunction minMaxCheck(){\nif (printing) return;\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.BloodPressurePercentBoysRevised_form){\n\nif (Age_param.value && isNaN(Age_param.value)){ clrValue(Age_param); alertNaN('Age'); }\nif (Age_param.value && (Age < (0 - 0.00001))) {\nAge = 0;\nclrValue(Age_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Age is 0 yr.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Age_param.value && Age > 17.999) {\nclrValue(Age_param);\nclrResults();\nAge = 0;\ndoCalc = false;\n alert(\"The maximum value for Age is 17.999 yr.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Height_param.value && isNaN(Height_param.value)){ clrValue(Height_param); alertNaN('Height'); }\nif (Height_param.value && (Height < (0 - 0.00001))) {\nHeight = 0;\nclrValue(Height_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Height is 0 cm.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Height_param.value && Height > 244) {\nclrValue(Height_param);\nclrResults();\nHeight = 0;\ndoCalc = false;\n alert(\"The maximum value for Height is 244 cm.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Systolic_BP_param.value && isNaN(Systolic_BP_param.value)){ clrValue(Systolic_BP_param); alertNaN('Systolic BP'); }\nif (Systolic_BP_param.value && (Systolic_BP < (0 - 0.00001))) {\nSystolic_BP = 0;\nclrValue(Systolic_BP_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Systolic BP is 0 mmHg.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Diastolic_BP_param.value && isNaN(Diastolic_BP_param.value)){ clrValue(Diastolic_BP_param); alertNaN('Diastolic BP'); }\nif (Diastolic_BP_param.value && (Diastolic_BP < (0 - 0.00001))) {\nDiastolic_BP = 0;\nclrValue(Diastolic_BP_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Diastolic BP is 0 mmHg.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\n\n\n}\n\n}\n\nfunction clrResults(){\n\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.BloodPressurePercentBoysRevised_form){\n\ndocument.getElementById('ttxt').innerHTML = '';\n\n\n}\n\n}\n\nvar Age = null,\nHeight = null,\nSystolic_BP = null,\nDiastolic_BP = null,\nHeight_Z = null,\nparam_value = null;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* ]]> */\n"}
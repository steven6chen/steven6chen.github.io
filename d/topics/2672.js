var data={"title":"Calculator: PELD score for end-stage liver disease (patients less than 12 years old)","body":"<div id=\"topicContentCalculator\" class=\"utdArticleSection\"><div id=\"topicText\">\n<div id=\"mc3k\">\n\n\n\n\n<form name=\"PELD_form\" id=\"PELD_form\" action=\"\" onsubmit=\"return false;\" onkeydown=\"formKeyDown(event);\" onkeypress=\"return validNumberField(event);\" onkeyup=\"PELD_fx();\">\n\n<table width=\"100%\" cellpadding=\"4\" cellspacing=\"0\" summary=\"MedCalc 3000 Table\">\n<tr><td bgcolor=\"#eeeeee\" width=\"1%\"><br /></td>\n<td bgcolor=\"#eeeeee\" align=\"left\">\n<span class=\"medCalcFontTitleBox\">\n\n \nCalculator: PELD score for end-stage liver disease (patients less than 12 years old)\n</span></td></tr></table><br />&nbsp;<br />\n\n<center>\n<div id=\"calc_equation\">\n<table cellspacing=\"0\" cellpadding=\"10\" summary=\"MedCalc 3000 Table\"><tr><td align=\"left\" bgcolor=\"#6c9a9c\"><span class=\"medCalcFontFormuli\">PELDscore = 10 * ((0.480 * ln(Bilirubin)) + (1.857 * ln(INR)) - (0.687 * ln(Albumin)) + Listingagefactor + Growth)</span></td></tr></table><br />&nbsp;<br />\n</div>\n</center>\n\n<div id=\"calc_main\">\n<center><table cellpadding=\"6\" cellspacing=\"0\" width=\"95%\" summary=\"MedCalc 3000 Table\"><tr><td align=\"right\" width=\"50%\">\n<center>\n<span class=\"medCalcFontIO\">\nInput:\n</span>\n<br />&nbsp;<br />\n<table cellpadding=\"3\" cellspacing=\"0\" summary=\"MedCalc 3000 Table\">\n<tr><td align=\"right\" valign=\"top\"><span class=\"medCalcFontOneBold\">Sex</span></td>\n<td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Sex_radio\" value=\"Female|1\" onclick=\"PELD_fx();\" /> Female</span></td></tr>\n<tr><td align=\"left\"><br /></td><td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Sex_radio\" value=\"Male|2\" onclick=\"PELD_fx();\" /> Male</span></td></tr>\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Age</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Age_param\" size=\"6\" value=\"\" onblur=\"PELD_fx(); minMaxCheck();\" onchange=\"PELD_fx();\" /></td>\n<td align=\"left\" width=\"115\" valign=\"top\"> <select name=\"Age_unit\" onchange=\"PELD_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"0.0833333333333333|0|mo\">mo</option>\n<option value=\"1|0|yr\" selected=\"selected\">yr</option>\n</select> </td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Weight</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Weight_param\" size=\"6\" value=\"\" onblur=\"PELD_fx(); minMaxCheck();\" onchange=\"PELD_fx();\" /></td>\n<td align=\"left\" width=\"115\" valign=\"top\"> <select name=\"Weight_unit\" onchange=\"PELD_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|kg\" selected=\"selected\">kg</option>\n<option value=\"0.45359237|0|lb\">lb</option>\n</select> </td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Height</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Height_param\" size=\"6\" value=\"\" onblur=\"PELD_fx(); minMaxCheck();\" onchange=\"PELD_fx();\" /></td>\n<td align=\"left\" width=\"115\" valign=\"top\"> <select name=\"Height_unit\" onchange=\"PELD_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"1|0|cm\" selected=\"selected\">cm</option>\n<option value=\"2.54|0|in\">in</option>\n<option value=\"100|0|m\">m</option>\n</select> </td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Albumin</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Albumin_param\" size=\"6\" value=\"\" onblur=\"PELD_fx(); minMaxCheck();\" onchange=\"PELD_fx();\" /></td>\n<td align=\"left\" width=\"115\" valign=\"top\"> <select name=\"Albumin_unit\" onchange=\"PELD_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"0.1|0|g/L\">g/L</option>\n<option value=\"1|0|g/dL\" selected=\"selected\">g/dL</option>\n<option value=\"0.001|0|mg%\">mg%</option>\n<option value=\"0.001|0|mg/dL\">mg/dL</option>\n<option value=\"0.1|0|mg/mL\">mg/mL</option>\n</select> </td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">Bilirubin</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"Bilirubin_param\" size=\"6\" value=\"\" onblur=\"PELD_fx(); minMaxCheck();\" onchange=\"PELD_fx();\" /></td>\n<td align=\"left\" width=\"115\" valign=\"top\"> <select name=\"Bilirubin_unit\" onchange=\"PELD_fx();\" style=\"width:105px;\" class=\"medCalcFontSelect\">\n<option value=\"100|0|g/L\">g/L</option>\n<option value=\"1000|0|g/dL\">g/dL</option>\n<option value=\"1|0|mg%\">mg%</option>\n<option value=\"1|0|mg/dL\" selected=\"selected\">mg/dL</option>\n<option value=\"100|0|mg/mL\">mg/mL</option>\n</select> </td></tr>\n\n<tr><td align=\"right\" width=\"42%\"><span class=\"medCalcFontOneBold\">INR</span> </td>\n<td align=\"left\" valign=\"top\" nowrap=\"nowrap\" width=\"5%\">&nbsp; <input type=\"text\" name=\"INR_param\" size=\"6\" value=\"\" onblur=\"PELD_fx(); minMaxCheck();\" onchange=\"PELD_fx();\" /></td>\n<td align=\"left\">&nbsp;</td></tr>\n\n<tr><td align=\"right\" valign=\"top\"><span class=\"medCalcFontOneBold\">Listing</span></td>\n<td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Listing_radio\" value=\"Age at listing one year or older|0\" onclick=\"PELD_fx();\" /> Age at listing one year or older</span></td></tr>\n<tr><td align=\"left\"><br /></td><td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Listing_radio\" value=\"Age at listing less than one year|1\" onclick=\"PELD_fx();\" /> Age at listing less than one year</span></td></tr>\n<tr><td align=\"right\" valign=\"top\"><span class=\"medCalcFontOneBold\">Exception diagnoses</span></td>\n<td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Exception_diagnoses_radio\" value=\"Noncontributory|0\" onclick=\"PELD_fx();\" /> Noncontributory</span></td></tr>\n<tr><td align=\"left\"><br /></td><td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Exception_diagnoses_radio\" value=\"Urea cycle disorder|1\" onclick=\"PELD_fx();\" /> Urea cycle disorder</span></td></tr>\n<tr><td align=\"left\"><br /></td><td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Exception_diagnoses_radio\" value=\"Organic acidemia|1\" onclick=\"PELD_fx();\" /> Organic acidemia</span></td></tr>\n<tr><td align=\"left\"><br /></td><td colspan=\"2\" align=\"left\"><span class=\"medCalcFontOne\"><input type=\"radio\" name=\"Exception_diagnoses_radio\" value=\"Hepatoblastoma|1\" onclick=\"PELD_fx();\" /> Hepatoblastoma</span></td></tr>\n\n</table>\n</center>\n</td><td align=\"left\" bgcolor=\"#eeeeee\">\n<center><span class=\"medCalcFontIO\">Results:</span>\n\n<br />&nbsp;<br />\n<table bgcolor=\"#eeeeee\" summary=\"MedCalc 3000 Table\" cellspacing=\"4\">\n<tr>\n<td align=\"right\"><span class=\"medCalcFontOneBold\">Growth failure</span></td>\n<td valign=\"top\" nowrap=\"nowrap\">&nbsp; <input type=\"text\" name=\"growth_failure\" size=\"12\" maxlength=\"12\" onfocus=\"blur();\" /></td>\n</tr>\n<tr>\n<td align=\"right\"><span class=\"medCalcFontOneBold\">PELD score</span></td>\n<td valign=\"top\" nowrap=\"nowrap\">&nbsp; <input type=\"text\" name=\"PELD_score_param\" size=\"6\" onfocus=\"blur();\" /></td>\n</tr>\n\n\n<tr><td colspan=\"3\">&nbsp;<br /></td></tr>\n\n</table>\n</center><br />&nbsp;<br />\n<div id=\"calc_buttons\">\n<center>\n<span class=\"medCalcFontOne\">\n\n\n\n\n\n<input type=\"reset\" name=\"reset\" value=\"Reset form\" />\n\n</span>\n</center>\n</div>\n</td></tr></table>\n</center>\n\n\n\n</div>\n<div id=\"calc_notes\">\n<span class=\"medCalcFontOneBold\">Notes</span>\n<ul class=\"medCalcFontOne\">\n<li>The pediatric end-stage liver disease (<b>PELD</b>) score is used to estimate relative  disease severity and likely survival of patients awaiting liver transplantation.</li>\n<li>The <b>Growth</b> term in the equation is set to 0.667 when the subject's height or weight is less than  2 standard deviations below the mean values for that age.  Thus, the presence of growth failure contributes almost 7 points to the <b>PELD</b> score.</li>\n<li>The <b>listing age factor</b> term will be set to 0.436 if the subject is under one year of age, or if the  subject is less than two years old AND was listed before the age of one year.</li>\n<li><b>INR</b>:international normalized ratio.</li>\n<li><b>Exception diagnoses:</b> The United Network for Organ Sharing (UNOS) specifies urea cycle disorders, organic acidemia, and hepatoblastoma  as exceptions to the <b>PELD</b> score calculation (and <b>MELD</b> score in patients between 12 and 17 years old).  For patients with these diseases, the <b>PELD</b> score is set at 30. Other metabolic diseases may be considered for exception scores by direct petition to UNOS.</li>\n<li>UNOS keeps track of such patients, and has much more information about the <b>PELD</b> score  at http://optn.transplant.hrsa.gov/resources/<wbr/>professionalResources.asp?index=8.</li>\n<li>Refer to appropriate UpToDate topic reviews.</li>\n\n</ul>\n</div>\n\n\n<div id=\"calc_tables\">\n\n</div>\n\n</form>\n\n</div>\n</div><div id=\"topicAgreement\">Use of UpToDate is subject to the <a href=\"https://www.uptodate.com/legal/license\" class=\"licenseLink\" id=\"sla_in_page\">Subscription and License Agreement</a>.</div><div id=\"printDisclaimer\">\r\n\t<b>Only digits 0 to 9 and a single decimal point (&quot;.&quot;) are acceptable as numeric inputs. Attempted input of other characters into a numeric field may lead to an incorrect result.</b>\r\n\t<p>\r\n\tInformation on this page may not appear correctly if printed. </p>\r\n</div>\r\n<div id=\"disclaimerCalculator\">\r\n\t<div class=\"medCalcFontTwo\">\r\n\t\t<p class=\"header\">Legal Notices and Disclaimer</p>\r\n\t\t<p>\r\n\t\t\tAll information contained in and produced by the EBMcalc system is provided\r\n\t\t\tfor educational purposes only. This information should not be used for the diagnosis or treatment\r\n\t\t\tof any health problem or disease. \r\n\t\t\t<b>THIS INFORMATION IS NOT INTENDED TO REPLACE CLINICAL JUDGMENT OR GUIDE INDIVIDUAL PATIENT CARE IN ANY MANNER.</b>\r\n\t\t\t<a href=\"https://www.uptodate.com/legal/ebmcalc-disclaimer\" class=\"medCalcDisclaimerLink\">Click here for full notice and disclaimer.</a>\r\n\t\t</p>\r\n\t\t<p class=\"copy\">EBMcalc is Copyright &copy; 1998-2018 Foundation Internet Services, LLC</p>\r\n\t</div>\r\n</div><div id=\"topicVersionRevision\">Topic 13423 Version 8.0</div></div>","outline":null,"javascript":"\n/* <![CDATA[ */\n\nvar lastChar = '';\n\nfunction log(i){\nreturn Math.log(i) * Math.LOG10E;   \n}\n\nfunction ln(i){\nreturn Math.log(i);\n}\n\nfunction sq(i){\nreturn i * i;\n}\n\nfunction sqr(i){\nreturn Math.sqrt(i);\n}\n\n\nfunction power(x,y){\nreturn Math.pow(x,y);\n}\n\nfunction eTo(x){\nreturn Math.exp(x);\n}\n\n\nfunction fixDP(r, dps) {\nif (isNaN(r)) return \"NaN\";\nvar msign = '';\nif (r < 0) msign = '-';\nx = Math.abs(r);\nif (x > Math.pow(10, 21)) return msign + x.toString();\nvar m = Math.round(x * Math.pow(10, dps)).toString();\nif (dps == 0) return msign + m;\nwhile (m.length <= dps) m = \"0\" + m;\nreturn msign + m.substring(0, m.length - dps) + \".\" + m.substring(m.length - dps);\n}\n\nfunction alertNaN(){\nalert('This field is improperly formatted. You may only input the digits 0-9 and a decimal point.');  \ndoCalc = false; \nclrResults();\n}\n\nfunction validNumberField(event) {\nvar field = event.target;\n\nif(field && field != 'undefined' && field.attributes.type.nodeValue && (field.attributes.type.nodeValue == 'number')) {\nvar val = field.value;\nvar charCode = event.charCode;\nvar key = String.fromCharCode(charCode);\n\nif(charCode == 0 || charCode == 13) {\n  return true;\n}\n\nif(key == ' ') {\nalert('Numeric field cannot contain spaces.');\n  return false;\n}\t\n\t\t\nif(key == '.') { return validDecimalPoint(val, key); }\nif(key == '-') { return validMinus(val, key); }\n\nif(isNaN(parseInt(key))) {\nalertNaN();\nreturn false;\n}\n\t\nreturn validFloat(val, key);\n}\nreturn true;\n}\n\nfunction validDecimalPoint(val, key) {\nif(val.length == 0 && lastChar != '.') {\n  lastChar = '.';\n  return true;\n}\nif(val.indexOf('.') >= 0 || lastChar == '.') {\n alertNaN();\n return false;\n}\nif(validFloat(val, key)) {\n lastChar = key;\n return true;\n}\nlastChar = '';\nreturn false;\n}\n\nfunction validMinus(val, key) {\nif(val.length == 0) {\n  return true;\n}\nif(val.length > 1) {\n alertNaN();\n return false;\n}\nreturn validFloat(val, key);\n}\n\n\nfunction validFloat(val, key) {\nvar currentVal = parseFloat(val + key);\nif(isNaN(val + key) || isNaN(currentVal)) {\nalertNaN();\nreturn false;\n}\nreturn true;\n}\n\nfunction formKeyDown(event) {\nvar field = event.target;\n\nif(field && field != 'undefined' && field.attributes.type.nodeValue && (field.attributes.type.nodeValue == 'number')) {\n  var val = field.value;\n  var keyCode = event.keyCode;\n  if(keyCode == 8 || keyCode == 127) {\n    // backspace or delete\n    if(lastChar == '.') {\n      lastChar = '';\n    }\n    if(field.value.length == 3 && field.value[0] == '0' && field.value[1] == '.') {\n      // this handles a backspace on an input like \".5\", which is saved internally as \"0.5\"\n      //   otherwise, if you leave the field after the backspace, it retains \"0.5\" as the value, most likely an iOS bug\n      field.value = ''; \n    }\n  }\n}\nclrResults();\n}\n\nfunction clrValue(field) {\n field.value = '';\n lastChar = '';\n}\n\nvar currenttimeout;\n\n\nvar calctxt = ''; \nvar xmltxt = ''; \nvar xmlresult = '';\nvar htmtxt = ''; \nvar postNow = false;\n\nfunction PELD_fx() {\ncurrenttimeout = self.setTimeout('minMaxCheck();', 4500);\n\nwith(document.PELD_form){\n\n\ndoCalc = true;\nrbchk = false;\nif (Sex_radio[0].checked){ rbchk = true; Sex = 1;  }\nif (Sex_radio[1].checked){ rbchk = true; Sex = 2;  }\nif (!rbchk) doCalc = false;\nparam_value = parseFloat(Age_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Age_unit.options[Age_unit.selectedIndex].value.split('|');\nAge = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Weight_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Weight_unit.options[Weight_unit.selectedIndex].value.split('|');\nWeight = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Height_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Height_unit.options[Height_unit.selectedIndex].value.split('|');\nHeight = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Albumin_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Albumin_unit.options[Albumin_unit.selectedIndex].value.split('|');\nAlbumin = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(Bilirubin_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nunit_parts = Bilirubin_unit.options[Bilirubin_unit.selectedIndex].value.split('|');\nBilirubin = param_value * parseFloat(unit_parts[0]) + parseFloat(unit_parts[1]);\nparam_value = parseFloat(INR_param.value);\nif (isNaN(param_value)){param_value = \"\"; doCalc = false;}\nINR = param_value;\nrbchk = false;\nif (Listing_radio[0].checked){ rbchk = true; Listing = 0;  }\nif (Listing_radio[1].checked){ rbchk = true; Listing = 1;  }\nif (!rbchk) doCalc = false;\nrbchk = false;\nif (Exception_diagnoses_radio[0].checked){ rbchk = true; Exception_diagnoses = 0;  }\nif (Exception_diagnoses_radio[1].checked){ rbchk = true; Exception_diagnoses = 1;  }\nif (Exception_diagnoses_radio[2].checked){ rbchk = true; Exception_diagnoses = 1;  }\nif (Exception_diagnoses_radio[3].checked){ rbchk = true; Exception_diagnoses = 1;  }\nif (!rbchk) doCalc = false;\ndp = 0;\nAge_Months =  Age * 12;\n\nHgt_M =  rangeN1(n2_Height, Age_Months);\n\nWgt_M =  rangeN1(n2_Weight, Age_Months);\n\nHgt_F =  rangeN1(n1_Height, Age_Months);\n\nWgt_F =  rangeN1(n1_Weight, Age_Months);\n\nListing_age_factor = 0;\nif (Age_Months < 12) Listing_age_factor = 0.436;\nif ((Age_Months < 24) && (Listing == 1)) Listing_age_factor = 0.436;\nGrowth = 0;\nif ((Sex == 1) && doCalc){\nif ((Height >= Hgt_F) && (Weight >= Wgt_F)) growth_failure.value = \"None\";\nif ((Height >= Hgt_F) && (Weight < Wgt_F)){ growth_failure.value = \"Wgt alone\"; Growth = 0.6672; }\nif ((Height < Hgt_F) && (Weight >= Wgt_F)){ growth_failure.value = \"Hgt alone\"; Growth = 0.6672; }\nif ((Height < Hgt_F) && (Weight < Wgt_F)){ growth_failure.value = \"Hgt and Wgt\"; Growth = 0.6672; }\n}\nif ((Sex == 2) && doCalc){\nif ((Height >= Hgt_M) && (Weight >= Wgt_M)) growth_failure.value = \"None\";\nif ((Height >= Hgt_M) && (Weight < Wgt_M)){ growth_failure.value = \"Wgt alone\"; Growth = 0.6672; }\nif ((Height < Hgt_M) && (Weight >= Wgt_M)){ growth_failure.value = \"Hgt alone\"; Growth = 0.6672; }\nif ((Height < Hgt_M) && (Weight < Wgt_M)){ growth_failure.value = \"Hgt and Wgt\"; Growth = 0.6672; }\n}\nPELD_score =  10 * ((0.480 * ln(Bilirubin)) + (1.857 * ln(INR)) - (0.687 * ln(Albumin)) + Listing_age_factor + Growth);\n\nif (doCalc) PELD_score_param.value = fixDP(PELD_score, dp);\n\n\n\nif (Exception_diagnoses){\nalert('Because of this specific disease, the PELD score is set at 30');\nPELD_score_param.value = '30';\n}\n\n\n}\n\n}\n\nfunction minMaxCheck(){\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.PELD_form){\n\nif (Age_param.value && isNaN(Age_param.value)){ clrValue(Age_param); alertNaN('Age'); }\nif (Age_param.value && Age < 0) {\nAge = 0;\nclrValue(Age_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Age is 0 yr.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Age_param.value && Age > 11.99) {\nclrValue(Age_param);\nclrResults();\nAge = 0;\ndoCalc = false;\n alert(\"The maximum value for Age is 11.99 yr.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Weight_param.value && isNaN(Weight_param.value)){ clrValue(Weight_param); alertNaN('Weight'); }\nif (Height_param.value && isNaN(Height_param.value)){ clrValue(Height_param); alertNaN('Height'); }\nif (Albumin_param.value && isNaN(Albumin_param.value)){ clrValue(Albumin_param); alertNaN('Albumin'); }\nif (Albumin_param.value && Albumin < 1) {\nAlbumin = 0;\nclrValue(Albumin_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Albumin is 1 g/dL.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Albumin_param.value && Albumin > 1000) {\nclrValue(Albumin_param);\nclrResults();\nAlbumin = 0;\ndoCalc = false;\n alert(\"The maximum value for Albumin is 1000 g/dL.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Bilirubin_param.value && isNaN(Bilirubin_param.value)){ clrValue(Bilirubin_param); alertNaN('Bilirubin'); }\nif (Bilirubin_param.value && Bilirubin < 1) {\nBilirubin = 0;\nclrValue(Bilirubin_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for Bilirubin is 1 mg/dL.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (Bilirubin_param.value && Bilirubin > 1000) {\nclrValue(Bilirubin_param);\nclrResults();\nBilirubin = 0;\ndoCalc = false;\n alert(\"The maximum value for Bilirubin is 1000 mg/dL.\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (INR_param.value && isNaN(INR_param.value)){ clrValue(INR_param); alertNaN('INR'); }\nif (INR_param.value && INR < 1) {\nINR = 0;\nclrValue(INR_param);\nclrResults();\ndoCalc = false;\n alert(\"The minimum value for INR is 1 .\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\nif (INR_param.value && INR > 1000) {\nclrValue(INR_param);\nclrResults();\nINR = 0;\ndoCalc = false;\n alert(\"The maximum value for INR is 1000 .\\nIf you are specifying a value with a different unit,\\nchange the unit selector first.\");\n}\n\n\n}\n\n}\n\nfunction clrResults(){\n\nif (currenttimeout) self.clearTimeout(currenttimeout);\n\nwith(document.PELD_form){\n\ngrowth_failure.value = '';\nPELD_score_param.value = '';\n\n\n}\n\n}\n\n\nn1_Height = new Array;\nn1_Weight = new Array;\n\nn1_Height[0] = 45.5600; n1_Weight[0] = 2.2000; \nn1_Height[1] = 54.5200; n1_Weight[1] = 3.9200; \nn1_Height[2] = 60.6200; n1_Weight[2] = 5.4600; \nn1_Height[3] = 64.9400; n1_Weight[3] = 6.6600; \nn1_Height[4] = 68.6200; n1_Weight[4] = 7.4000; \nn1_Height[5] = 71.9000; n1_Weight[5] = 7.9600; \nn1_Height[6] = 74.7600; n1_Weight[6] = 8.4600; \nn1_Height[7] = 77.4400; n1_Weight[7] = 8.9800; \nn1_Height[8] = 78.0000; n1_Weight[8] = 9.4600; \nn1_Height[9] = 80.2800; n1_Weight[9] = 9.8800; \nn1_Height[10] = 82.4200; n1_Weight[10] = 10.3200; \nn1_Height[11] = 84.5200; n1_Weight[11] = 10.7800; \nn1_Height[12] = 86.4800; n1_Weight[12] = 11.1400; \nn1_Height[13] = 88.3200; n1_Weight[13] = 11.5200; \nn1_Height[14] = 90.1200; n1_Weight[14] = 11.9200; \nn1_Height[15] = 91.9000; n1_Weight[15] = 12.2000; \nn1_Height[16] = 93.5600; n1_Weight[16] = 12.6000; \nn1_Height[17] = 95.1000; n1_Weight[17] = 12.8800; \nn1_Height[18] = 96.6000; n1_Weight[18] = 13.1800; \nn1_Height[19] = 98.1000; n1_Weight[19] = 13.4600; \nn1_Height[20] = 99.5800; n1_Weight[20] = 13.8400; \nn1_Height[21] = 100.9400; n1_Weight[21] = 14.1000; \nn1_Height[22] = 102.2800; n1_Weight[22] = 14.4400; \nn1_Height[23] = 103.5200; n1_Weight[23] = 14.6800; \nn1_Height[24] = 104.7600; n1_Weight[24] = 14.9800; \nn1_Height[25] = 106.0800; n1_Weight[25] = 15.2800; \nn1_Height[26] = 107.2000; n1_Weight[26] = 15.6400; \nn1_Height[27] = 108.4000; n1_Weight[27] = 15.9800; \nn1_Height[28] = 109.6200; n1_Weight[28] = 16.3000; \nn1_Height[29] = 110.8400; n1_Weight[29] = 16.6800; \nn1_Height[30] = 111.9600; n1_Weight[30] = 17.1200; \nn1_Height[31] = 113.0800; n1_Weight[31] = 17.4400; \nn1_Height[32] = 114.3200; n1_Weight[32] = 17.8400; \nn1_Height[33] = 115.4600; n1_Weight[33] = 18.3200; \nn1_Height[34] = 116.7200; n1_Weight[34] = 18.7800; \nn1_Height[35] = 118.0000; n1_Weight[35] = 19.2400; \nn1_Height[36] = 119.1800; n1_Weight[36] = 19.7600; \nn1_Height[37] = 120.4800; n1_Weight[37] = 20.2000; \nn1_Height[38] = 121.8200; n1_Weight[38] = 20.8200; \nn1_Height[39] = 123.2600; n1_Weight[39] = 21.3400; \nn1_Height[40] = 124.6400; n1_Weight[40] = 21.8600; \nn1_Height[41] = 126.1400; n1_Weight[41] = 22.4800; \nn1_Height[42] = 127.6600; n1_Weight[42] = 23.1200; \nn1_Height[43] = 129.2200; n1_Weight[43] = 23.7600; \nn1_Height[44] = 130.9200; n1_Weight[44] = 24.5000; \nn1_Height[45] = 132.6400; n1_Weight[45] = 25.1800; \nn1_Height[46] = 134.4000; n1_Weight[46] = 25.8600; \nn1_Height[47] = 136.1800; n1_Weight[47] = 26.6600; \nn1_Height[48] = 137.8600; n1_Weight[48] = 27.4000; \n\nfunction rangeN1(thisp, thisx){\nvar xconv = (thisx - 0) / 3;\nx1 = Math.floor(xconv + .001);  \nreturn thisp[x1];\n}\n\nn2_Height = new Array;\nn2_Weight = new Array;\n\nn2_Height[0] = 46.0200; n2_Weight[0] = 2.4800; \nn2_Height[1] = 55.8000; n2_Weight[1] = 4.1000; \nn2_Height[2] = 62.4000; n2_Weight[2] = 5.8400; \nn2_Height[3] = 67.0200; n2_Weight[3] = 7.2600; \nn2_Height[4] = 70.7000; n2_Weight[4] = 8.1600; \nn2_Height[5] = 73.7000; n2_Weight[5] = 8.7200; \nn2_Height[6] = 76.3200; n2_Weight[6] = 9.1400; \nn2_Height[7] = 78.6400; n2_Weight[7] = 9.4800; \nn2_Height[8] = 79.2400; n2_Weight[8] = 9.6400; \nn2_Height[9] = 81.3800; n2_Weight[9] = 10.1000; \nn2_Height[10] = 83.3600; n2_Weight[10] = 10.5800; \nn2_Height[11] = 85.3600; n2_Weight[11] = 11.0800; \nn2_Height[12] = 87.2800; n2_Weight[12] = 11.4000; \nn2_Height[13] = 89.1400; n2_Weight[13] = 11.8200; \nn2_Height[14] = 91.0000; n2_Weight[14] = 12.1600; \nn2_Height[15] = 92.6800; n2_Weight[15] = 12.5200; \nn2_Height[16] = 94.3800; n2_Weight[16] = 12.9000; \nn2_Height[17] = 96.0800; n2_Weight[17] = 13.2800; \nn2_Height[18] = 97.7200; n2_Weight[18] = 13.6800; \nn2_Height[19] = 99.2600; n2_Weight[19] = 14.0600; \nn2_Height[20] = 100.7000; n2_Weight[20] = 14.4600; \nn2_Height[21] = 102.1600; n2_Weight[21] = 14.8600; \nn2_Height[22] = 103.6200; n2_Weight[22] = 15.2600; \nn2_Height[23] = 105.0000; n2_Weight[23] = 15.6600; \nn2_Height[24] = 106.3800; n2_Weight[24] = 16.0400; \nn2_Height[25] = 107.6600; n2_Weight[25] = 16.4000; \nn2_Height[26] = 109.0400; n2_Weight[26] = 16.7600; \nn2_Height[27] = 110.2200; n2_Weight[27] = 17.2200; \nn2_Height[28] = 111.5000; n2_Weight[28] = 17.6400; \nn2_Height[29] = 112.6800; n2_Weight[29] = 17.9400; \nn2_Height[30] = 113.9600; n2_Weight[30] = 18.3200; \nn2_Height[31] = 115.1400; n2_Weight[31] = 18.7800; \nn2_Height[32] = 116.3000; n2_Weight[32] = 19.1000; \nn2_Height[33] = 117.4600; n2_Weight[33] = 19.5000; \nn2_Height[34] = 118.6000; n2_Weight[34] = 19.8600; \nn2_Height[35] = 119.7200; n2_Weight[35] = 20.2000; \nn2_Height[36] = 120.8400; n2_Weight[36] = 20.5200; \nn2_Height[37] = 121.9600; n2_Weight[37] = 20.9000; \nn2_Height[38] = 123.0400; n2_Weight[38] = 21.2800; \nn2_Height[39] = 124.1200; n2_Weight[39] = 21.7400; \nn2_Height[40] = 125.2800; n2_Weight[40] = 22.1000; \nn2_Height[41] = 126.4000; n2_Weight[41] = 22.6400; \nn2_Height[42] = 127.5200; n2_Weight[42] = 23.0800; \nn2_Height[43] = 128.7200; n2_Weight[43] = 23.6000; \nn2_Height[44] = 129.8800; n2_Weight[44] = 24.1400; \nn2_Height[45] = 131.0200; n2_Weight[45] = 24.7800; \nn2_Height[46] = 132.2400; n2_Weight[46] = 25.4000; \nn2_Height[47] = 133.4200; n2_Weight[47] = 26.0600; \nn2_Height[48] = 134.6800; n2_Weight[48] = 26.8200; \n\nfunction rangeN2(thisp, thisx){\nvar xconv = (thisx - 0) / 3;\nx1 = Math.floor(xconv + .001);  \nreturn thisp[x1];\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* ]]> */\n"}